{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"./utils\");\n\nvar currentLevel = \"info\";\nvar levels = {\n  \"trace\": 0,\n  \"debug\": 1,\n  \"info\": 2,\n  \"warn\": 3,\n  \"error\": 4,\n  \"fatal\": 5\n}; // Logger implementation..\n\nfunction log(level) {\n  // Return a console message depending on the logging level..\n  return function (message) {\n    if (levels[level] >= levels[currentLevel]) {\n      console.log(\"[\" + _.formatDate(new Date()) + \"] \" + level + \": \" + message);\n    }\n  };\n}\n\nmodule.exports = {\n  // Change the current logging level..\n  setLevel: function setLevel(level) {\n    currentLevel = level;\n  },\n  trace: log(\"trace\"),\n  debug: log(\"debug\"),\n  info: log(\"info\"),\n  warn: log(\"warn\"),\n  error: log(\"error\"),\n  fatal: log(\"fatal\")\n};","map":{"version":3,"sources":["C:/git/react-apps/react-twitchlady/node_modules/react-tmi/lib/logger.js"],"names":["_","require","currentLevel","levels","log","level","message","console","formatDate","Date","module","exports","setLevel","trace","debug","info","warn","error","fatal"],"mappings":"AAAA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,SAAD,CAAf;;AAEA,IAAIC,YAAY,GAAG,MAAnB;AACA,IAAIC,MAAM,GAAG;AAAE,WAAS,CAAX;AAAc,WAAS,CAAvB;AAA0B,UAAQ,CAAlC;AAAqC,UAAQ,CAA7C;AAAgD,WAAS,CAAzD;AAA4D,WAAS;AAArE,CAAb,C,CAEA;;AACA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AACnB;AACA,SAAO,UAAUC,OAAV,EAAmB;AACzB,QAAIH,MAAM,CAACE,KAAD,CAAN,IAAiBF,MAAM,CAACD,YAAD,CAA3B,EAA2C;AAC1CK,MAAAA,OAAO,CAACH,GAAR,CAAY,MAAMJ,CAAC,CAACQ,UAAF,CAAa,IAAIC,IAAJ,EAAb,CAAN,GAAiC,IAAjC,GAAwCJ,KAAxC,GAAgD,IAAhD,GAAuDC,OAAnE;AACA;AACD,GAJD;AAKA;;AAEDI,MAAM,CAACC,OAAP,GAAiB;AAChB;AACAC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBP,KAAlB,EAAyB;AAClCH,IAAAA,YAAY,GAAGG,KAAf;AACA,GAJe;AAMhBQ,EAAAA,KAAK,EAAET,GAAG,CAAC,OAAD,CANM;AAOhBU,EAAAA,KAAK,EAAEV,GAAG,CAAC,OAAD,CAPM;AAQhBW,EAAAA,IAAI,EAAEX,GAAG,CAAC,MAAD,CARO;AAShBY,EAAAA,IAAI,EAAEZ,GAAG,CAAC,MAAD,CATO;AAUhBa,EAAAA,KAAK,EAAEb,GAAG,CAAC,OAAD,CAVM;AAWhBc,EAAAA,KAAK,EAAEd,GAAG,CAAC,OAAD;AAXM,CAAjB","sourcesContent":["\"use strict\";\n\nvar _ = require(\"./utils\");\n\nvar currentLevel = \"info\";\nvar levels = { \"trace\": 0, \"debug\": 1, \"info\": 2, \"warn\": 3, \"error\": 4, \"fatal\": 5 };\n\n// Logger implementation..\nfunction log(level) {\n\t// Return a console message depending on the logging level..\n\treturn function (message) {\n\t\tif (levels[level] >= levels[currentLevel]) {\n\t\t\tconsole.log(\"[\" + _.formatDate(new Date()) + \"] \" + level + \": \" + message);\n\t\t}\n\t};\n}\n\nmodule.exports = {\n\t// Change the current logging level..\n\tsetLevel: function setLevel(level) {\n\t\tcurrentLevel = level;\n\t},\n\n\ttrace: log(\"trace\"),\n\tdebug: log(\"debug\"),\n\tinfo: log(\"info\"),\n\twarn: log(\"warn\"),\n\terror: log(\"error\"),\n\tfatal: log(\"fatal\")\n};"]},"metadata":{},"sourceType":"script"}