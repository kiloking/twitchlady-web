{"ast":null,"code":"\"use strict\";\n\nvar _ = require(\"./utils\"); // Enable followers-only mode on a channel..\n\n\nfunction followersonly(channel, minutes) {\n  var _this = this;\n\n  channel = _.channel(channel);\n  minutes = _.get(minutes, 30); // Send the command to the server and race the Promise against a delay..\n\n  return this._sendCommand(this._getPromiseDelay(), channel, \"/followers \" + minutes, function (resolve, reject) {\n    // Received _promiseFollowers event, resolve or reject..\n    _this.once(\"_promiseFollowers\", function (err) {\n      if (!err) {\n        resolve([channel, ~~minutes]);\n      } else {\n        reject(err);\n      }\n    });\n  });\n} // Disable followers-only mode on a channel..\n\n\nfunction followersonlyoff(channel) {\n  var _this2 = this;\n\n  channel = _.channel(channel); // Send the command to the server and race the Promise against a delay..\n\n  return this._sendCommand(this._getPromiseDelay(), channel, \"/followersoff\", function (resolve, reject) {\n    // Received _promiseFollowersoff event, resolve or reject..\n    _this2.once(\"_promiseFollowersoff\", function (err) {\n      if (!err) {\n        resolve([channel]);\n      } else {\n        reject(err);\n      }\n    });\n  });\n} // Leave a channel..\n\n\nfunction part(channel) {\n  var _this3 = this;\n\n  channel = _.channel(channel); // Send the command to the server and race the Promise against a delay..\n\n  return this._sendCommand(this._getPromiseDelay(), null, \"PART \" + channel, function (resolve, reject) {\n    // Received _promisePart event, resolve or reject..\n    _this3.once(\"_promisePart\", function (err) {\n      if (!err) {\n        resolve([channel]);\n      } else {\n        reject(err);\n      }\n    });\n  });\n} // Enable R9KBeta mode on a channel..\n\n\nfunction r9kbeta(channel) {\n  var _this4 = this;\n\n  channel = _.channel(channel); // Send the command to the server and race the Promise against a delay..\n\n  return this._sendCommand(this._getPromiseDelay(), channel, \"/r9kbeta\", function (resolve, reject) {\n    // Received _promiseR9kbeta event, resolve or reject..\n    _this4.once(\"_promiseR9kbeta\", function (err) {\n      if (!err) {\n        resolve([channel]);\n      } else {\n        reject(err);\n      }\n    });\n  });\n} // Disable R9KBeta mode on a channel..\n\n\nfunction r9kbetaoff(channel) {\n  var _this5 = this;\n\n  channel = _.channel(channel); // Send the command to the server and race the Promise against a delay..\n\n  return this._sendCommand(this._getPromiseDelay(), channel, \"/r9kbetaoff\", function (resolve, reject) {\n    // Received _promiseR9kbetaoff event, resolve or reject..\n    _this5.once(\"_promiseR9kbetaoff\", function (err) {\n      if (!err) {\n        resolve([channel]);\n      } else {\n        reject(err);\n      }\n    });\n  });\n} // Enable slow mode on a channel..\n\n\nfunction slow(channel, seconds) {\n  var _this6 = this;\n\n  channel = _.channel(channel);\n  seconds = _.get(seconds, 300); // Send the command to the server and race the Promise against a delay..\n\n  return this._sendCommand(this._getPromiseDelay(), channel, \"/slow \" + seconds, function (resolve, reject) {\n    // Received _promiseSlow event, resolve or reject..\n    _this6.once(\"_promiseSlow\", function (err) {\n      if (!err) {\n        resolve([channel, ~~seconds]);\n      } else {\n        reject(err);\n      }\n    });\n  });\n} // Disable slow mode on a channel..\n\n\nfunction slowoff(channel) {\n  var _this7 = this;\n\n  channel = _.channel(channel); // Send the command to the server and race the Promise against a delay..\n\n  return this._sendCommand(this._getPromiseDelay(), channel, \"/slowoff\", function (resolve, reject) {\n    // Received _promiseSlowoff event, resolve or reject..\n    _this7.once(\"_promiseSlowoff\", function (err) {\n      if (!err) {\n        resolve([channel]);\n      } else {\n        reject(err);\n      }\n    });\n  });\n}\n\nmodule.exports = {\n  // Send action message (/me <message>) on a channel..\n  action: function action(channel, message) {\n    channel = _.channel(channel);\n    message = \"\\x01ACTION \" + message + \"\\x01\"; // Send the command to the server and race the Promise against a delay..\n\n    return this._sendMessage(this._getPromiseDelay(), channel, message, function (resolve, reject) {\n      // At this time, there is no possible way to detect if a message has been sent has been eaten\n      // by the server, so we can only resolve the Promise.\n      resolve([channel, message]);\n    });\n  },\n  // Ban username on channel..\n  ban: function ban(channel, username, reason) {\n    var _this8 = this;\n\n    channel = _.channel(channel);\n    username = _.username(username);\n    reason = _.get(reason, \"\"); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), channel, \"/ban \" + username + \" \" + reason, function (resolve, reject) {\n      // Received _promiseBan event, resolve or reject..\n      _this8.once(\"_promiseBan\", function (err) {\n        if (!err) {\n          resolve([channel, username, reason]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Clear all messages on a channel..\n  clear: function clear(channel) {\n    var _this9 = this;\n\n    channel = _.channel(channel); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), channel, \"/clear\", function (resolve, reject) {\n      // Received _promiseClear event, resolve or reject..\n      _this9.once(\"_promiseClear\", function (err) {\n        if (!err) {\n          resolve([channel]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Change the color of your username..\n  color: function color(channel, newColor) {\n    var _this10 = this;\n\n    newColor = _.get(newColor, channel); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), \"#tmijs\", \"/color \" + newColor, function (resolve, reject) {\n      // Received _promiseColor event, resolve or reject..\n      _this10.once(\"_promiseColor\", function (err) {\n        if (!err) {\n          resolve([newColor]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Run commercial on a channel for X seconds..\n  commercial: function commercial(channel, seconds) {\n    var _this11 = this;\n\n    channel = _.channel(channel);\n    seconds = _.get(seconds, 30); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), channel, \"/commercial \" + seconds, function (resolve, reject) {\n      // Received _promiseCommercial event, resolve or reject..\n      _this11.once(\"_promiseCommercial\", function (err) {\n        if (!err) {\n          resolve([channel, ~~seconds]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Delete a specific message on a channel\n  deletemessage: function deletemessage(channel, messageUUID) {\n    var _this12 = this;\n\n    channel = _.channel(channel); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), channel, \"/delete \" + messageUUID, function (resolve, reject) {\n      // Received _promiseDeletemessage event, resolve or reject..\n      _this12.once(\"_promiseDeletemessage\", function (err) {\n        if (!err) {\n          resolve([channel]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Enable emote-only mode on a channel..\n  emoteonly: function emoteonly(channel) {\n    var _this13 = this;\n\n    channel = _.channel(channel); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), channel, \"/emoteonly\", function (resolve, reject) {\n      // Received _promiseEmoteonly event, resolve or reject..\n      _this13.once(\"_promiseEmoteonly\", function (err) {\n        if (!err) {\n          resolve([channel]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Disable emote-only mode on a channel..\n  emoteonlyoff: function emoteonlyoff(channel) {\n    var _this14 = this;\n\n    channel = _.channel(channel); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), channel, \"/emoteonlyoff\", function (resolve, reject) {\n      // Received _promiseEmoteonlyoff event, resolve or reject..\n      _this14.once(\"_promiseEmoteonlyoff\", function (err) {\n        if (!err) {\n          resolve([channel]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Enable followers-only mode on a channel..\n  followersonly: followersonly,\n  // Alias for followersonly()..\n  followersmode: followersonly,\n  // Disable followers-only mode on a channel..\n  followersonlyoff: followersonlyoff,\n  // Alias for followersonlyoff()..\n  followersmodeoff: followersonlyoff,\n  // Host a channel..\n  host: function host(channel, target) {\n    var _this15 = this;\n\n    channel = _.channel(channel);\n    target = _.username(target); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(2000, channel, \"/host \" + target, function (resolve, reject) {\n      // Received _promiseHost event, resolve or reject..\n      _this15.once(\"_promiseHost\", function (err, remaining) {\n        if (!err) {\n          resolve([channel, target, ~~remaining]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Join a channel..\n  join: function join(channel) {\n    var _this16 = this;\n\n    channel = _.channel(channel); // Send the command to the server ..\n\n    return this._sendCommand(null, null, \"JOIN \" + channel, function (resolve, reject) {\n      var eventName = \"_promiseJoin\";\n      var hasFulfilled = false;\n\n      var listener = function listener(err, joinedChannel) {\n        if (channel === _.channel(joinedChannel)) {\n          // Received _promiseJoin event for the target channel, resolve or reject..\n          _this16.removeListener(eventName, listener);\n\n          hasFulfilled = true;\n\n          if (!err) {\n            resolve([channel]);\n          } else {\n            reject(err);\n          }\n        }\n      };\n\n      _this16.on(eventName, listener); // Race the Promise against a delay..\n\n\n      var delay = _this16._getPromiseDelay();\n\n      _.promiseDelay(delay).then(function () {\n        if (!hasFulfilled) {\n          _this16.emit(eventName, \"No response from Twitch.\", channel);\n        }\n      });\n    });\n  },\n  // Mod username on channel..\n  mod: function mod(channel, username) {\n    var _this17 = this;\n\n    channel = _.channel(channel);\n    username = _.username(username); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), channel, \"/mod \" + username, function (resolve, reject) {\n      // Received _promiseMod event, resolve or reject..\n      _this17.once(\"_promiseMod\", function (err) {\n        if (!err) {\n          resolve([channel, username]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Get list of mods on a channel..\n  mods: function mods(channel) {\n    var _this18 = this;\n\n    channel = _.channel(channel); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), channel, \"/mods\", function (resolve, reject) {\n      // Received _promiseMods event, resolve or reject..\n      _this18.once(\"_promiseMods\", function (err, mods) {\n        if (!err) {\n          // Update the internal list of moderators..\n          mods.forEach(function (username) {\n            if (!_this18.moderators[channel]) {\n              _this18.moderators[channel] = [];\n            }\n\n            if (!_this18.moderators[channel].includes(username)) {\n              _this18.moderators[channel].push(username);\n            }\n          });\n          resolve(mods);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Leave a channel..\n  part: part,\n  // Alias for part()..\n  leave: part,\n  // Send a ping to the server..\n  ping: function ping() {\n    var _this19 = this; // Send the command to the server and race the Promise against a delay..\n\n\n    return this._sendCommand(this._getPromiseDelay(), null, \"PING\", function (resolve, reject) {\n      // Update the internal ping timeout check interval..\n      _this19.latency = new Date();\n      _this19.pingTimeout = setTimeout(function () {\n        if (_this19.ws !== null) {\n          _this19.wasCloseCalled = false;\n\n          _this19.log.error(\"Ping timeout.\");\n\n          _this19.ws.close();\n\n          clearInterval(_this19.pingLoop);\n          clearTimeout(_this19.pingTimeout);\n        }\n      }, _.get(_this19.opts.connection.timeout, 9999)); // Received _promisePing event, resolve or reject..\n\n      _this19.once(\"_promisePing\", function (latency) {\n        return resolve([parseFloat(latency)]);\n      });\n    });\n  },\n  // Enable R9KBeta mode on a channel..\n  r9kbeta: r9kbeta,\n  // Alias for r9kbeta()..\n  r9kmode: r9kbeta,\n  // Disable R9KBeta mode on a channel..\n  r9kbetaoff: r9kbetaoff,\n  // Alias for r9kbetaoff()..\n  r9kmodeoff: r9kbetaoff,\n  // Send a raw message to the server..\n  raw: function raw(message) {\n    // Send the command to the server and race the Promise against a delay..\n    return this._sendCommand(this._getPromiseDelay(), null, message, function (resolve, reject) {\n      resolve([message]);\n    });\n  },\n  // Send a message on a channel..\n  say: function say(channel, message) {\n    channel = _.channel(channel);\n\n    if (message.startsWith(\".\") && !message.startsWith(\"..\") || message.startsWith(\"/\") || message.startsWith(\"\\\\\")) {\n      // Check if the message is an action message..\n      if (message.substr(1, 3) === \"me \") {\n        return this.action(channel, message.substr(4));\n      } else {\n        // Send the command to the server and race the Promise against a delay..\n        return this._sendCommand(this._getPromiseDelay(), channel, message, function (resolve, reject) {\n          // At this time, there is no possible way to detect if a message has been sent has been eaten\n          // by the server, so we can only resolve the Promise.\n          resolve([channel, message]);\n        });\n      }\n    } // Send the command to the server and race the Promise against a delay..\n\n\n    return this._sendMessage(this._getPromiseDelay(), channel, message, function (resolve, reject) {\n      // At this time, there is no possible way to detect if a message has been sent has been eaten\n      // by the server, so we can only resolve the Promise.\n      resolve([channel, message]);\n    });\n  },\n  // Enable slow mode on a channel..\n  slow: slow,\n  // Alias for slow()..\n  slowmode: slow,\n  // Disable slow mode on a channel..\n  slowoff: slowoff,\n  // Alias for slowoff()..\n  slowmodeoff: slowoff,\n  // Enable subscribers mode on a channel..\n  subscribers: function subscribers(channel) {\n    var _this20 = this;\n\n    channel = _.channel(channel); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), channel, \"/subscribers\", function (resolve, reject) {\n      // Received _promiseSubscribers event, resolve or reject..\n      _this20.once(\"_promiseSubscribers\", function (err) {\n        if (!err) {\n          resolve([channel]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Disable subscribers mode on a channel..\n  subscribersoff: function subscribersoff(channel) {\n    var _this21 = this;\n\n    channel = _.channel(channel); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), channel, \"/subscribersoff\", function (resolve, reject) {\n      // Received _promiseSubscribersoff event, resolve or reject..\n      _this21.once(\"_promiseSubscribersoff\", function (err) {\n        if (!err) {\n          resolve([channel]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Timeout username on channel for X seconds..\n  timeout: function timeout(channel, username, seconds, reason) {\n    var _this22 = this;\n\n    channel = _.channel(channel);\n    username = _.username(username);\n\n    if (!_.isNull(seconds) && !_.isInteger(seconds)) {\n      reason = seconds;\n      seconds = 300;\n    }\n\n    seconds = _.get(seconds, 300);\n    reason = _.get(reason, \"\"); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), channel, \"/timeout \" + username + \" \" + seconds + \" \" + reason, function (resolve, reject) {\n      // Received _promiseTimeout event, resolve or reject..\n      _this22.once(\"_promiseTimeout\", function (err) {\n        if (!err) {\n          resolve([channel, username, ~~seconds, reason]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Unban username on channel..\n  unban: function unban(channel, username) {\n    var _this23 = this;\n\n    channel = _.channel(channel);\n    username = _.username(username); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), channel, \"/unban \" + username, function (resolve, reject) {\n      // Received _promiseUnban event, resolve or reject..\n      _this23.once(\"_promiseUnban\", function (err) {\n        if (!err) {\n          resolve([channel, username]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // End the current hosting..\n  unhost: function unhost(channel) {\n    var _this24 = this;\n\n    channel = _.channel(channel); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(2000, channel, \"/unhost\", function (resolve, reject) {\n      // Received _promiseUnhost event, resolve or reject..\n      _this24.once(\"_promiseUnhost\", function (err) {\n        if (!err) {\n          resolve([channel]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Unmod username on channel..\n  unmod: function unmod(channel, username) {\n    var _this25 = this;\n\n    channel = _.channel(channel);\n    username = _.username(username); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), channel, \"/unmod \" + username, function (resolve, reject) {\n      // Received _promiseUnmod event, resolve or reject..\n      _this25.once(\"_promiseUnmod\", function (err) {\n        if (!err) {\n          resolve([channel, username]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Unvip username on channel..\n  unvip: function unvip(channel, username) {\n    var _this26 = this;\n\n    channel = _.channel(channel);\n    username = _.username(username); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), channel, \"/unvip \" + username, function (resolve, reject) {\n      // Received _promiseUnvip event, resolve or reject..\n      _this26.once(\"_promiseUnvip\", function (err) {\n        if (!err) {\n          resolve([channel, username]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Add username to VIP list on channel..\n  vip: function vip(channel, username) {\n    var _this27 = this;\n\n    channel = _.channel(channel);\n    username = _.username(username); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), channel, \"/vip \" + username, function (resolve, reject) {\n      // Received _promiseVip event, resolve or reject..\n      _this27.once(\"_promiseVip\", function (err) {\n        if (!err) {\n          resolve([channel, username]);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Get list of VIPs on a channel..\n  vips: function vips(channel) {\n    var _this28 = this;\n\n    channel = _.channel(channel); // Send the command to the server and race the Promise against a delay..\n\n    return this._sendCommand(this._getPromiseDelay(), channel, \"/vips\", function (resolve, reject) {\n      // Received _promiseVips event, resolve or reject..\n      _this28.once(\"_promiseVips\", function (err, vips) {\n        if (!err) {\n          resolve(vips);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  // Send an whisper message to a user..\n  whisper: function whisper(username, message) {\n    var _this29 = this;\n\n    username = _.username(username); // The server will not send a whisper to the account that sent it.\n\n    if (username === this.getUsername()) {\n      return Promise.reject(\"Cannot send a whisper to the same account.\");\n    } // Send the command to the server and race the Promise against a delay..\n\n\n    return this._sendCommand(this._getPromiseDelay(), \"#tmijs\", \"/w \" + username + \" \" + message, function (resolve, reject) {\n      _this29.once(\"_promiseWhisper\", function (err) {\n        if (err) {\n          reject(err);\n        }\n      });\n    }).catch(function (err) {\n      // Either an \"actual\" error occured or the timeout triggered\n      // the latter means no errors have occured and we can resolve\n      // else just elevate the error\n      if (err && typeof err === 'string' && err.indexOf(\"No response from Twitch.\") !== 0) {\n        throw err;\n      }\n\n      var from = _.channel(username),\n          userstate = _.merge({\n        \"message-type\": \"whisper\",\n        \"message-id\": null,\n        \"thread-id\": null,\n        username: _this29.getUsername()\n      }, _this29.globaluserstate); // Emit for both, whisper and message..\n\n\n      _this29.emits([\"whisper\", \"message\"], [[from, userstate, message, true], [from, userstate, message, true]]);\n\n      return [username, message];\n    });\n  }\n};","map":{"version":3,"sources":["C:/git/react-apps/react-twitchlady/node_modules/react-tmi/lib/commands.js"],"names":["_","require","followersonly","channel","minutes","_this","get","_sendCommand","_getPromiseDelay","resolve","reject","once","err","followersonlyoff","_this2","part","_this3","r9kbeta","_this4","r9kbetaoff","_this5","slow","seconds","_this6","slowoff","_this7","module","exports","action","message","_sendMessage","ban","username","reason","_this8","clear","_this9","color","newColor","_this10","commercial","_this11","deletemessage","messageUUID","_this12","emoteonly","_this13","emoteonlyoff","_this14","followersmode","followersmodeoff","host","target","_this15","remaining","join","_this16","eventName","hasFulfilled","listener","joinedChannel","removeListener","on","delay","promiseDelay","then","emit","mod","_this17","mods","_this18","forEach","moderators","includes","push","leave","ping","_this19","latency","Date","pingTimeout","setTimeout","ws","wasCloseCalled","log","error","close","clearInterval","pingLoop","clearTimeout","opts","connection","timeout","parseFloat","r9kmode","r9kmodeoff","raw","say","startsWith","substr","slowmode","slowmodeoff","subscribers","_this20","subscribersoff","_this21","_this22","isNull","isInteger","unban","_this23","unhost","_this24","unmod","_this25","unvip","_this26","vip","_this27","vips","_this28","whisper","_this29","getUsername","Promise","catch","indexOf","from","userstate","merge","globaluserstate","emits"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _ = require(\"./utils\");\n\n// Enable followers-only mode on a channel..\nfunction followersonly(channel, minutes) {\n\tvar _this = this;\n\n\tchannel = _.channel(channel);\n\tminutes = _.get(minutes, 30);\n\n\t// Send the command to the server and race the Promise against a delay..\n\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/followers \" + minutes, function (resolve, reject) {\n\t\t// Received _promiseFollowers event, resolve or reject..\n\t\t_this.once(\"_promiseFollowers\", function (err) {\n\t\t\tif (!err) {\n\t\t\t\tresolve([channel, ~~minutes]);\n\t\t\t} else {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t});\n}\n\n// Disable followers-only mode on a channel..\nfunction followersonlyoff(channel) {\n\tvar _this2 = this;\n\n\tchannel = _.channel(channel);\n\n\t// Send the command to the server and race the Promise against a delay..\n\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/followersoff\", function (resolve, reject) {\n\t\t// Received _promiseFollowersoff event, resolve or reject..\n\t\t_this2.once(\"_promiseFollowersoff\", function (err) {\n\t\t\tif (!err) {\n\t\t\t\tresolve([channel]);\n\t\t\t} else {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t});\n}\n\n// Leave a channel..\nfunction part(channel) {\n\tvar _this3 = this;\n\n\tchannel = _.channel(channel);\n\n\t// Send the command to the server and race the Promise against a delay..\n\treturn this._sendCommand(this._getPromiseDelay(), null, \"PART \" + channel, function (resolve, reject) {\n\t\t// Received _promisePart event, resolve or reject..\n\t\t_this3.once(\"_promisePart\", function (err) {\n\t\t\tif (!err) {\n\t\t\t\tresolve([channel]);\n\t\t\t} else {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t});\n}\n\n// Enable R9KBeta mode on a channel..\nfunction r9kbeta(channel) {\n\tvar _this4 = this;\n\n\tchannel = _.channel(channel);\n\n\t// Send the command to the server and race the Promise against a delay..\n\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/r9kbeta\", function (resolve, reject) {\n\t\t// Received _promiseR9kbeta event, resolve or reject..\n\t\t_this4.once(\"_promiseR9kbeta\", function (err) {\n\t\t\tif (!err) {\n\t\t\t\tresolve([channel]);\n\t\t\t} else {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t});\n}\n\n// Disable R9KBeta mode on a channel..\nfunction r9kbetaoff(channel) {\n\tvar _this5 = this;\n\n\tchannel = _.channel(channel);\n\n\t// Send the command to the server and race the Promise against a delay..\n\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/r9kbetaoff\", function (resolve, reject) {\n\t\t// Received _promiseR9kbetaoff event, resolve or reject..\n\t\t_this5.once(\"_promiseR9kbetaoff\", function (err) {\n\t\t\tif (!err) {\n\t\t\t\tresolve([channel]);\n\t\t\t} else {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t});\n}\n\n// Enable slow mode on a channel..\nfunction slow(channel, seconds) {\n\tvar _this6 = this;\n\n\tchannel = _.channel(channel);\n\tseconds = _.get(seconds, 300);\n\n\t// Send the command to the server and race the Promise against a delay..\n\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/slow \" + seconds, function (resolve, reject) {\n\t\t// Received _promiseSlow event, resolve or reject..\n\t\t_this6.once(\"_promiseSlow\", function (err) {\n\t\t\tif (!err) {\n\t\t\t\tresolve([channel, ~~seconds]);\n\t\t\t} else {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t});\n}\n\n// Disable slow mode on a channel..\nfunction slowoff(channel) {\n\tvar _this7 = this;\n\n\tchannel = _.channel(channel);\n\n\t// Send the command to the server and race the Promise against a delay..\n\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/slowoff\", function (resolve, reject) {\n\t\t// Received _promiseSlowoff event, resolve or reject..\n\t\t_this7.once(\"_promiseSlowoff\", function (err) {\n\t\t\tif (!err) {\n\t\t\t\tresolve([channel]);\n\t\t\t} else {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t});\n}\n\nmodule.exports = {\n\t// Send action message (/me <message>) on a channel..\n\taction: function action(channel, message) {\n\t\tchannel = _.channel(channel);\n\t\tmessage = \"\\x01ACTION \" + message + \"\\x01\";\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendMessage(this._getPromiseDelay(), channel, message, function (resolve, reject) {\n\t\t\t// At this time, there is no possible way to detect if a message has been sent has been eaten\n\t\t\t// by the server, so we can only resolve the Promise.\n\t\t\tresolve([channel, message]);\n\t\t});\n\t},\n\n\n\t// Ban username on channel..\n\tban: function ban(channel, username, reason) {\n\t\tvar _this8 = this;\n\n\t\tchannel = _.channel(channel);\n\t\tusername = _.username(username);\n\t\treason = _.get(reason, \"\");\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/ban \" + username + \" \" + reason, function (resolve, reject) {\n\t\t\t// Received _promiseBan event, resolve or reject..\n\t\t\t_this8.once(\"_promiseBan\", function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([channel, username, reason]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Clear all messages on a channel..\n\tclear: function clear(channel) {\n\t\tvar _this9 = this;\n\n\t\tchannel = _.channel(channel);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/clear\", function (resolve, reject) {\n\t\t\t// Received _promiseClear event, resolve or reject..\n\t\t\t_this9.once(\"_promiseClear\", function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([channel]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Change the color of your username..\n\tcolor: function color(channel, newColor) {\n\t\tvar _this10 = this;\n\n\t\tnewColor = _.get(newColor, channel);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), \"#tmijs\", \"/color \" + newColor, function (resolve, reject) {\n\t\t\t// Received _promiseColor event, resolve or reject..\n\t\t\t_this10.once(\"_promiseColor\", function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([newColor]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Run commercial on a channel for X seconds..\n\tcommercial: function commercial(channel, seconds) {\n\t\tvar _this11 = this;\n\n\t\tchannel = _.channel(channel);\n\t\tseconds = _.get(seconds, 30);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/commercial \" + seconds, function (resolve, reject) {\n\t\t\t// Received _promiseCommercial event, resolve or reject..\n\t\t\t_this11.once(\"_promiseCommercial\", function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([channel, ~~seconds]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Delete a specific message on a channel\n\tdeletemessage: function deletemessage(channel, messageUUID) {\n\t\tvar _this12 = this;\n\n\t\tchannel = _.channel(channel);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/delete \" + messageUUID, function (resolve, reject) {\n\t\t\t// Received _promiseDeletemessage event, resolve or reject..\n\t\t\t_this12.once(\"_promiseDeletemessage\", function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([channel]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Enable emote-only mode on a channel..\n\temoteonly: function emoteonly(channel) {\n\t\tvar _this13 = this;\n\n\t\tchannel = _.channel(channel);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/emoteonly\", function (resolve, reject) {\n\t\t\t// Received _promiseEmoteonly event, resolve or reject..\n\t\t\t_this13.once(\"_promiseEmoteonly\", function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([channel]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Disable emote-only mode on a channel..\n\temoteonlyoff: function emoteonlyoff(channel) {\n\t\tvar _this14 = this;\n\n\t\tchannel = _.channel(channel);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/emoteonlyoff\", function (resolve, reject) {\n\t\t\t// Received _promiseEmoteonlyoff event, resolve or reject..\n\t\t\t_this14.once(\"_promiseEmoteonlyoff\", function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([channel]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Enable followers-only mode on a channel..\n\tfollowersonly: followersonly,\n\n\t// Alias for followersonly()..\n\tfollowersmode: followersonly,\n\n\t// Disable followers-only mode on a channel..\n\tfollowersonlyoff: followersonlyoff,\n\n\t// Alias for followersonlyoff()..\n\tfollowersmodeoff: followersonlyoff,\n\n\t// Host a channel..\n\thost: function host(channel, target) {\n\t\tvar _this15 = this;\n\n\t\tchannel = _.channel(channel);\n\t\ttarget = _.username(target);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(2000, channel, \"/host \" + target, function (resolve, reject) {\n\t\t\t// Received _promiseHost event, resolve or reject..\n\t\t\t_this15.once(\"_promiseHost\", function (err, remaining) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([channel, target, ~~remaining]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Join a channel..\n\tjoin: function join(channel) {\n\t\tvar _this16 = this;\n\n\t\tchannel = _.channel(channel);\n\n\t\t// Send the command to the server ..\n\t\treturn this._sendCommand(null, null, \"JOIN \" + channel, function (resolve, reject) {\n\t\t\tvar eventName = \"_promiseJoin\";\n\t\t\tvar hasFulfilled = false;\n\t\t\tvar listener = function listener(err, joinedChannel) {\n\t\t\t\tif (channel === _.channel(joinedChannel)) {\n\t\t\t\t\t// Received _promiseJoin event for the target channel, resolve or reject..\n\t\t\t\t\t_this16.removeListener(eventName, listener);\n\t\t\t\t\thasFulfilled = true;\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tresolve([channel]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\t_this16.on(eventName, listener);\n\t\t\t// Race the Promise against a delay..\n\t\t\tvar delay = _this16._getPromiseDelay();\n\t\t\t_.promiseDelay(delay).then(function () {\n\t\t\t\tif (!hasFulfilled) {\n\t\t\t\t\t_this16.emit(eventName, \"No response from Twitch.\", channel);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Mod username on channel..\n\tmod: function mod(channel, username) {\n\t\tvar _this17 = this;\n\n\t\tchannel = _.channel(channel);\n\t\tusername = _.username(username);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/mod \" + username, function (resolve, reject) {\n\t\t\t// Received _promiseMod event, resolve or reject..\n\t\t\t_this17.once(\"_promiseMod\", function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([channel, username]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Get list of mods on a channel..\n\tmods: function mods(channel) {\n\t\tvar _this18 = this;\n\n\t\tchannel = _.channel(channel);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/mods\", function (resolve, reject) {\n\t\t\t// Received _promiseMods event, resolve or reject..\n\t\t\t_this18.once(\"_promiseMods\", function (err, mods) {\n\t\t\t\tif (!err) {\n\t\t\t\t\t// Update the internal list of moderators..\n\t\t\t\t\tmods.forEach(function (username) {\n\t\t\t\t\t\tif (!_this18.moderators[channel]) {\n\t\t\t\t\t\t\t_this18.moderators[channel] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!_this18.moderators[channel].includes(username)) {\n\t\t\t\t\t\t\t_this18.moderators[channel].push(username);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tresolve(mods);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Leave a channel..\n\tpart: part,\n\n\t// Alias for part()..\n\tleave: part,\n\n\t// Send a ping to the server..\n\tping: function ping() {\n\t\tvar _this19 = this;\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), null, \"PING\", function (resolve, reject) {\n\t\t\t// Update the internal ping timeout check interval..\n\t\t\t_this19.latency = new Date();\n\t\t\t_this19.pingTimeout = setTimeout(function () {\n\t\t\t\tif (_this19.ws !== null) {\n\t\t\t\t\t_this19.wasCloseCalled = false;\n\t\t\t\t\t_this19.log.error(\"Ping timeout.\");\n\t\t\t\t\t_this19.ws.close();\n\n\t\t\t\t\tclearInterval(_this19.pingLoop);\n\t\t\t\t\tclearTimeout(_this19.pingTimeout);\n\t\t\t\t}\n\t\t\t}, _.get(_this19.opts.connection.timeout, 9999));\n\n\t\t\t// Received _promisePing event, resolve or reject..\n\t\t\t_this19.once(\"_promisePing\", function (latency) {\n\t\t\t\treturn resolve([parseFloat(latency)]);\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Enable R9KBeta mode on a channel..\n\tr9kbeta: r9kbeta,\n\n\t// Alias for r9kbeta()..\n\tr9kmode: r9kbeta,\n\n\t// Disable R9KBeta mode on a channel..\n\tr9kbetaoff: r9kbetaoff,\n\n\t// Alias for r9kbetaoff()..\n\tr9kmodeoff: r9kbetaoff,\n\n\t// Send a raw message to the server..\n\traw: function raw(message) {\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), null, message, function (resolve, reject) {\n\t\t\tresolve([message]);\n\t\t});\n\t},\n\n\n\t// Send a message on a channel..\n\tsay: function say(channel, message) {\n\t\tchannel = _.channel(channel);\n\n\t\tif (message.startsWith(\".\") && !message.startsWith(\"..\") || message.startsWith(\"/\") || message.startsWith(\"\\\\\")) {\n\t\t\t// Check if the message is an action message..\n\t\t\tif (message.substr(1, 3) === \"me \") {\n\t\t\t\treturn this.action(channel, message.substr(4));\n\t\t\t} else {\n\t\t\t\t// Send the command to the server and race the Promise against a delay..\n\t\t\t\treturn this._sendCommand(this._getPromiseDelay(), channel, message, function (resolve, reject) {\n\t\t\t\t\t// At this time, there is no possible way to detect if a message has been sent has been eaten\n\t\t\t\t\t// by the server, so we can only resolve the Promise.\n\t\t\t\t\tresolve([channel, message]);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendMessage(this._getPromiseDelay(), channel, message, function (resolve, reject) {\n\t\t\t// At this time, there is no possible way to detect if a message has been sent has been eaten\n\t\t\t// by the server, so we can only resolve the Promise.\n\t\t\tresolve([channel, message]);\n\t\t});\n\t},\n\n\n\t// Enable slow mode on a channel..\n\tslow: slow,\n\n\t// Alias for slow()..\n\tslowmode: slow,\n\n\t// Disable slow mode on a channel..\n\tslowoff: slowoff,\n\n\t// Alias for slowoff()..\n\tslowmodeoff: slowoff,\n\n\t// Enable subscribers mode on a channel..\n\tsubscribers: function subscribers(channel) {\n\t\tvar _this20 = this;\n\n\t\tchannel = _.channel(channel);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/subscribers\", function (resolve, reject) {\n\t\t\t// Received _promiseSubscribers event, resolve or reject..\n\t\t\t_this20.once(\"_promiseSubscribers\", function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([channel]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Disable subscribers mode on a channel..\n\tsubscribersoff: function subscribersoff(channel) {\n\t\tvar _this21 = this;\n\n\t\tchannel = _.channel(channel);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/subscribersoff\", function (resolve, reject) {\n\t\t\t// Received _promiseSubscribersoff event, resolve or reject..\n\t\t\t_this21.once(\"_promiseSubscribersoff\", function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([channel]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Timeout username on channel for X seconds..\n\ttimeout: function timeout(channel, username, seconds, reason) {\n\t\tvar _this22 = this;\n\n\t\tchannel = _.channel(channel);\n\t\tusername = _.username(username);\n\n\t\tif (!_.isNull(seconds) && !_.isInteger(seconds)) {\n\t\t\treason = seconds;\n\t\t\tseconds = 300;\n\t\t}\n\n\t\tseconds = _.get(seconds, 300);\n\t\treason = _.get(reason, \"\");\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/timeout \" + username + \" \" + seconds + \" \" + reason, function (resolve, reject) {\n\t\t\t// Received _promiseTimeout event, resolve or reject..\n\t\t\t_this22.once(\"_promiseTimeout\", function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([channel, username, ~~seconds, reason]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Unban username on channel..\n\tunban: function unban(channel, username) {\n\t\tvar _this23 = this;\n\n\t\tchannel = _.channel(channel);\n\t\tusername = _.username(username);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/unban \" + username, function (resolve, reject) {\n\t\t\t// Received _promiseUnban event, resolve or reject..\n\t\t\t_this23.once(\"_promiseUnban\", function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([channel, username]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// End the current hosting..\n\tunhost: function unhost(channel) {\n\t\tvar _this24 = this;\n\n\t\tchannel = _.channel(channel);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(2000, channel, \"/unhost\", function (resolve, reject) {\n\t\t\t// Received _promiseUnhost event, resolve or reject..\n\t\t\t_this24.once(\"_promiseUnhost\", function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([channel]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Unmod username on channel..\n\tunmod: function unmod(channel, username) {\n\t\tvar _this25 = this;\n\n\t\tchannel = _.channel(channel);\n\t\tusername = _.username(username);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/unmod \" + username, function (resolve, reject) {\n\t\t\t// Received _promiseUnmod event, resolve or reject..\n\t\t\t_this25.once(\"_promiseUnmod\", function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([channel, username]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Unvip username on channel..\n\tunvip: function unvip(channel, username) {\n\t\tvar _this26 = this;\n\n\t\tchannel = _.channel(channel);\n\t\tusername = _.username(username);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/unvip \" + username, function (resolve, reject) {\n\t\t\t// Received _promiseUnvip event, resolve or reject..\n\t\t\t_this26.once(\"_promiseUnvip\", function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([channel, username]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Add username to VIP list on channel..\n\tvip: function vip(channel, username) {\n\t\tvar _this27 = this;\n\n\t\tchannel = _.channel(channel);\n\t\tusername = _.username(username);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/vip \" + username, function (resolve, reject) {\n\t\t\t// Received _promiseVip event, resolve or reject..\n\t\t\t_this27.once(\"_promiseVip\", function (err) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve([channel, username]);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Get list of VIPs on a channel..\n\tvips: function vips(channel) {\n\t\tvar _this28 = this;\n\n\t\tchannel = _.channel(channel);\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), channel, \"/vips\", function (resolve, reject) {\n\t\t\t// Received _promiseVips event, resolve or reject..\n\t\t\t_this28.once(\"_promiseVips\", function (err, vips) {\n\t\t\t\tif (!err) {\n\t\t\t\t\tresolve(vips);\n\t\t\t\t} else {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\n\t// Send an whisper message to a user..\n\twhisper: function whisper(username, message) {\n\t\tvar _this29 = this;\n\n\t\tusername = _.username(username);\n\n\t\t// The server will not send a whisper to the account that sent it.\n\t\tif (username === this.getUsername()) {\n\t\t\treturn Promise.reject(\"Cannot send a whisper to the same account.\");\n\t\t}\n\n\t\t// Send the command to the server and race the Promise against a delay..\n\t\treturn this._sendCommand(this._getPromiseDelay(), \"#tmijs\", \"/w \" + username + \" \" + message, function (resolve, reject) {\n\t\t\t_this29.once(\"_promiseWhisper\", function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}).catch(function (err) {\n\t\t\t// Either an \"actual\" error occured or the timeout triggered\n\t\t\t// the latter means no errors have occured and we can resolve\n\t\t\t// else just elevate the error\n\t\t\tif (err && typeof err === 'string' && err.indexOf(\"No response from Twitch.\") !== 0) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tvar from = _.channel(username),\n\t\t\t    userstate = _.merge({\n\t\t\t\t\"message-type\": \"whisper\",\n\t\t\t\t\"message-id\": null,\n\t\t\t\t\"thread-id\": null,\n\t\t\t\tusername: _this29.getUsername()\n\t\t\t}, _this29.globaluserstate);\n\n\t\t\t// Emit for both, whisper and message..\n\t\t\t_this29.emits([\"whisper\", \"message\"], [[from, userstate, message, true], [from, userstate, message, true]]);\n\t\t\treturn [username, message];\n\t\t});\n\t}\n};"]},"metadata":{},"sourceType":"script"}