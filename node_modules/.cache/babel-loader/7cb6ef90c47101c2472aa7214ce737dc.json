{"ast":null,"code":"\"use strict\";\n\nvar api = require(\"./api\");\n\nvar commands = require(\"./commands\");\n\nvar EventEmitter = require(\"./events\").EventEmitter;\n\nvar logger = require(\"./logger\");\n\nvar parse = require(\"./parser\");\n\nvar timer = require(\"./timer\");\n\nvar _global = typeof global !== \"undefined\" ? global : typeof window !== \"undefined\" ? window : {};\n\nvar _WebSocket = _global.WebSocket || require(\"ws\");\n\nvar _ = require(\"./utils\"); // Client instance..\n\n\nvar client = function client(opts) {\n  if (this instanceof client === false) {\n    return new client(opts);\n  }\n\n  this.opts = _.get(opts, {});\n  this.opts.channels = this.opts.channels || [];\n  this.opts.connection = this.opts.connection || {};\n  this.opts.identity = this.opts.identity || {};\n  this.opts.options = this.opts.options || {};\n  this.clientId = _.get(this.opts.options.clientId, null);\n  this._globalDefaultChannel = _.channel(_.get(this.opts.options.globalDefaultChannel, \"#tmijs\"));\n  this.maxReconnectAttempts = _.get(this.opts.connection.maxReconnectAttempts, Infinity);\n  this.maxReconnectInterval = _.get(this.opts.connection.maxReconnectInterval, 30000);\n  this.reconnect = _.get(this.opts.connection.reconnect, false);\n  this.reconnectDecay = _.get(this.opts.connection.reconnectDecay, 1.5);\n  this.reconnectInterval = _.get(this.opts.connection.reconnectInterval, 1000);\n  this.reconnecting = false;\n  this.reconnections = 0;\n  this.reconnectTimer = this.reconnectInterval;\n  this.secure = _.get(this.opts.connection.secure, !this.opts.connection.server && !this.opts.connection.port); // Raw data and object for emote-sets..\n\n  this.emotes = \"\";\n  this.emotesets = {};\n  this.channels = [];\n  this.currentLatency = 0;\n  this.globaluserstate = {};\n  this.lastJoined = \"\";\n  this.latency = new Date();\n  this.moderators = {};\n  this.pingLoop = null;\n  this.pingTimeout = null;\n  this.reason = \"\";\n  this.username = \"\";\n  this.userstate = {};\n  this.wasCloseCalled = false;\n  this.ws = null; // Create the logger..\n\n  var level = \"error\";\n\n  if (this.opts.options.debug) {\n    level = \"info\";\n  }\n\n  this.log = this.opts.logger || logger;\n\n  try {\n    logger.setLevel(level);\n  } catch (e) {}\n\n  ; // Format the channel names..\n\n  this.opts.channels.forEach(function (part, index, theArray) {\n    theArray[index] = _.channel(part);\n  });\n  EventEmitter.call(this);\n  this.setMaxListeners(0);\n};\n\n_.inherits(client, EventEmitter); // Emit multiple events..\n\n\nclient.prototype.emits = function emits(types, values) {\n  for (var i = 0; i < types.length; i++) {\n    var val = i < values.length ? values[i] : values[values.length - 1];\n    this.emit.apply(this, [types[i]].concat(val));\n  }\n};\n\nclient.prototype.off = client.prototype.removeListener;\nclient.prototype.api = api; // Put all commands in prototype..\n\nfor (var methodName in commands) {\n  client.prototype[methodName] = commands[methodName];\n} // Handle parsed chat server message..\n\n\nclient.prototype.handleMessage = function handleMessage(message) {\n  var _this = this;\n\n  if (_.isNull(message)) {\n    return;\n  }\n\n  if (this.listenerCount(\"raw_message\")) {\n    this.emit(\"raw_message\", JSON.parse(JSON.stringify(message)), message);\n  }\n\n  var channel = _.channel(_.get(message.params[0], null));\n\n  var msg = _.get(message.params[1], null);\n\n  var msgid = _.get(message.tags[\"msg-id\"], null); // Parse badges, badge-info and emotes..\n\n\n  var tags = message.tags = parse.badges(parse.badgeInfo(parse.emotes(message.tags))); // Transform IRCv3 tags..\n\n  for (var key in tags) {\n    if (key === \"emote-sets\" || key === \"ban-duration\" || key === \"bits\") {\n      continue;\n    }\n\n    var value = tags[key];\n\n    if (_.isBoolean(value)) {\n      value = null;\n    } else if (value === \"1\") {\n      value = true;\n    } else if (value === \"0\") {\n      value = false;\n    } else if (_.isString(value)) {\n      value = _.unescapeIRC(value);\n    }\n\n    tags[key] = value;\n  } // Messages with no prefix..\n\n\n  if (_.isNull(message.prefix)) {\n    switch (message.command) {\n      // Received PING from server..\n      case \"PING\":\n        this.emit(\"ping\");\n\n        if (this._isConnected()) {\n          this.ws.send(\"PONG\");\n        }\n\n        break;\n      // Received PONG from server, return current latency..\n\n      case \"PONG\":\n        var currDate = new Date();\n        this.currentLatency = (currDate.getTime() - this.latency.getTime()) / 1000;\n        this.emits([\"pong\", \"_promisePing\"], [[this.currentLatency]]);\n        clearTimeout(this.pingTimeout);\n        break;\n\n      default:\n        this.log.warn(\"Could not parse message with no prefix:\\n\" + JSON.stringify(message, null, 4));\n        break;\n    }\n  } // Messages with \"tmi.twitch.tv\" as a prefix..\n  else if (message.prefix === \"tmi.twitch.tv\") {\n      switch (message.command) {\n        case \"002\":\n        case \"003\":\n        case \"004\":\n        case \"375\":\n        case \"376\":\n        case \"CAP\":\n          break;\n        // Retrieve username from server..\n\n        case \"001\":\n          this.username = message.params[0];\n          break;\n        // Connected to server..\n\n        case \"372\":\n          this.log.info(\"Connected to server.\");\n          this.userstate[this._globalDefaultChannel] = {};\n          this.emits([\"connected\", \"_promiseConnect\"], [[this.server, this.port], [null]]);\n          this.reconnections = 0;\n          this.reconnectTimer = this.reconnectInterval; // Set an internal ping timeout check interval..\n\n          this.pingLoop = setInterval(function () {\n            // Make sure the connection is opened before sending the message..\n            if (_this._isConnected()) {\n              _this.ws.send(\"PING\");\n            }\n\n            _this.latency = new Date();\n            _this.pingTimeout = setTimeout(function () {\n              if (!_.isNull(_this.ws)) {\n                _this.wasCloseCalled = false;\n\n                _this.log.error(\"Ping timeout.\");\n\n                _this.ws.close();\n\n                clearInterval(_this.pingLoop);\n                clearTimeout(_this.pingTimeout);\n              }\n            }, _.get(_this.opts.connection.timeout, 9999));\n          }, 60000); // Join all the channels from the config with an interval..\n\n          var joinInterval = _.get(this.opts.options.joinInterval, 2000);\n\n          if (joinInterval < 300) joinInterval = 300;\n          var joinQueue = new timer.queue(joinInterval);\n\n          var joinChannels = _.union(this.opts.channels, this.channels);\n\n          this.channels = [];\n\n          var _loop = function _loop() {\n            var channel = joinChannels[i];\n            joinQueue.add(function () {\n              if (_this._isConnected()) {\n                _this.join(channel).catch(function (err) {\n                  return _this.log.error(err);\n                });\n              }\n            });\n          };\n\n          for (var i = 0; i < joinChannels.length; i++) {\n            _loop();\n          }\n\n          joinQueue.run();\n          break;\n        // https://github.com/justintv/Twitch-API/blob/master/chat/capabilities.md#notice\n\n        case \"NOTICE\":\n          var nullArr = [null];\n          var noticeArr = [channel, msgid, msg];\n          var msgidArr = [msgid];\n          var channelTrueArr = [channel, true];\n          var channelFalseArr = [channel, false];\n          var noticeAndNull = [noticeArr, nullArr];\n          var noticeAndMsgid = [noticeArr, msgidArr];\n          var basicLog = \"[\" + channel + \"] \" + msg;\n\n          switch (msgid) {\n            // This room is now in subscribers-only mode.\n            case \"subs_on\":\n              this.log.info(\"[\" + channel + \"] This room is now in subscribers-only mode.\");\n              this.emits([\"subscriber\", \"subscribers\", \"_promiseSubscribers\"], [channelTrueArr, channelTrueArr, nullArr]);\n              break;\n            // This room is no longer in subscribers-only mode.\n\n            case \"subs_off\":\n              this.log.info(\"[\" + channel + \"] This room is no longer in subscribers-only mode.\");\n              this.emits([\"subscriber\", \"subscribers\", \"_promiseSubscribersoff\"], [channelFalseArr, channelFalseArr, nullArr]);\n              break;\n            // This room is now in emote-only mode.\n\n            case \"emote_only_on\":\n              this.log.info(\"[\" + channel + \"] This room is now in emote-only mode.\");\n              this.emits([\"emoteonly\", \"_promiseEmoteonly\"], [channelTrueArr, nullArr]);\n              break;\n            // This room is no longer in emote-only mode.\n\n            case \"emote_only_off\":\n              this.log.info(\"[\" + channel + \"] This room is no longer in emote-only mode.\");\n              this.emits([\"emoteonly\", \"_promiseEmoteonlyoff\"], [channelFalseArr, nullArr]);\n              break;\n            // Do not handle slow_on/off here, listen to the ROOMSTATE notice instead as it returns the delay.\n\n            case \"slow_on\":\n            case \"slow_off\":\n              break;\n            // Do not handle followers_on/off here, listen to the ROOMSTATE notice instead as it returns the delay.\n\n            case \"followers_on_zero\":\n            case \"followers_on\":\n            case \"followers_off\":\n              break;\n            // This room is now in r9k mode.\n\n            case \"r9k_on\":\n              this.log.info(\"[\" + channel + \"] This room is now in r9k mode.\");\n              this.emits([\"r9kmode\", \"r9kbeta\", \"_promiseR9kbeta\"], [channelTrueArr, channelTrueArr, nullArr]);\n              break;\n            // This room is no longer in r9k mode.\n\n            case \"r9k_off\":\n              this.log.info(\"[\" + channel + \"] This room is no longer in r9k mode.\");\n              this.emits([\"r9kmode\", \"r9kbeta\", \"_promiseR9kbetaoff\"], [channelFalseArr, channelFalseArr, nullArr]);\n              break;\n            // The moderators of this room are: [..., ...]\n\n            case \"room_mods\":\n              var mods = msg.split(\": \")[1].toLowerCase().split(\", \").filter(function (n) {\n                return n;\n              });\n              this.emits([\"_promiseMods\", \"mods\"], [[null, mods], [channel, mods]]);\n              break;\n            // There are no moderators for this room.\n\n            case \"no_mods\":\n              this.emits([\"_promiseMods\", \"mods\"], [[null, []], [channel, []]]);\n              break;\n            // The VIPs of this channel are: [..., ...]\n\n            case \"vips_success\":\n              if (msg.endsWith(\".\")) {\n                msg = msg.slice(0, -1);\n              }\n\n              var vips = msg.split(\": \")[1].toLowerCase().split(\", \").filter(function (n) {\n                return n;\n              });\n              this.emits([\"_promiseVips\", \"vips\"], [[null, vips], [channel, vips]]);\n              break;\n            // There are no VIPs for this room.\n\n            case \"no_vips\":\n              this.emits([\"_promiseVips\", \"vips\"], [[null, []], [channel, []]]);\n              break;\n            // Ban command failed..\n\n            case \"already_banned\":\n            case \"bad_ban_admin\":\n            case \"bad_ban_broadcaster\":\n            case \"bad_ban_global_mod\":\n            case \"bad_ban_self\":\n            case \"bad_ban_staff\":\n            case \"usage_ban\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseBan\"], noticeAndMsgid);\n              break;\n            // Ban command success..\n\n            case \"ban_success\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseBan\"], noticeAndNull);\n              break;\n            // Clear command failed..\n\n            case \"usage_clear\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseClear\"], noticeAndMsgid);\n              break;\n            // Mods command failed..\n\n            case \"usage_mods\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseMods\"], [noticeArr, [msgid, []]]);\n              break;\n            // Mod command success..\n\n            case \"mod_success\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseMod\"], noticeAndNull);\n              break;\n            // VIPs command failed..\n\n            case \"usage_vips\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseVips\"], [noticeArr, [msgid, []]]);\n              break;\n            // VIP command failed..\n\n            case \"usage_vip\":\n            case \"bad_vip_grantee_banned\":\n            case \"bad_vip_grantee_already_vip\":\n            case \"bad_vip_max_vips_reached\":\n            case \"bad_vip_achievement_incomplete\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseVip\"], [noticeArr, [msgid, []]]);\n              break;\n            // VIP command success..\n\n            case \"vip_success\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseVip\"], noticeAndNull);\n              break;\n            // Mod command failed..\n\n            case \"usage_mod\":\n            case \"bad_mod_banned\":\n            case \"bad_mod_mod\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseMod\"], noticeAndMsgid);\n              break;\n            // Unmod command success..\n\n            case \"unmod_success\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseUnmod\"], noticeAndNull);\n              break;\n            // Unvip command success...\n\n            case \"unvip_success\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseUnvip\"], noticeAndNull);\n              break;\n            // Unmod command failed..\n\n            case \"usage_unmod\":\n            case \"bad_unmod_mod\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseUnmod\"], noticeAndMsgid);\n              break;\n            // Unvip command failed..\n\n            case \"usage_unvip\":\n            case \"bad_unvip_grantee_not_vip\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseUnvip\"], noticeAndMsgid);\n              break;\n            // Color command success..\n\n            case \"color_changed\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseColor\"], noticeAndNull);\n              break;\n            // Color command failed..\n\n            case \"usage_color\":\n            case \"turbo_only_color\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseColor\"], noticeAndMsgid);\n              break;\n            // Commercial command success..\n\n            case \"commercial_success\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseCommercial\"], noticeAndNull);\n              break;\n            // Commercial command failed..\n\n            case \"usage_commercial\":\n            case \"bad_commercial_error\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseCommercial\"], noticeAndMsgid);\n              break;\n            // Host command success..\n\n            case \"hosts_remaining\":\n              this.log.info(basicLog);\n              var remainingHost = !isNaN(msg[0]) ? parseInt(msg[0]) : 0;\n              this.emits([\"notice\", \"_promiseHost\"], [noticeArr, [null, ~~remainingHost]]);\n              break;\n            // Host command failed..\n\n            case \"bad_host_hosting\":\n            case \"bad_host_rate_exceeded\":\n            case \"bad_host_error\":\n            case \"usage_host\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseHost\"], [noticeArr, [msgid, null]]);\n              break;\n            // r9kbeta command failed..\n\n            case \"already_r9k_on\":\n            case \"usage_r9k_on\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseR9kbeta\"], noticeAndMsgid);\n              break;\n            // r9kbetaoff command failed..\n\n            case \"already_r9k_off\":\n            case \"usage_r9k_off\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseR9kbetaoff\"], noticeAndMsgid);\n              break;\n            // Timeout command success..\n\n            case \"timeout_success\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseTimeout\"], noticeAndNull);\n              break;\n\n            case \"delete_message_success\":\n              this.log.info(\"[\" + channel + \" \" + msg + \"]\");\n              this.emits([\"notice\", \"_promiseDeletemessage\"], noticeAndNull);\n            // Subscribersoff command failed..\n\n            case \"already_subs_off\":\n            case \"usage_subs_off\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseSubscribersoff\"], noticeAndMsgid);\n              break;\n            // Subscribers command failed..\n\n            case \"already_subs_on\":\n            case \"usage_subs_on\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseSubscribers\"], noticeAndMsgid);\n              break;\n            // Emoteonlyoff command failed..\n\n            case \"already_emote_only_off\":\n            case \"usage_emote_only_off\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseEmoteonlyoff\"], noticeAndMsgid);\n              break;\n            // Emoteonly command failed..\n\n            case \"already_emote_only_on\":\n            case \"usage_emote_only_on\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseEmoteonly\"], noticeAndMsgid);\n              break;\n            // Slow command failed..\n\n            case \"usage_slow_on\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseSlow\"], noticeAndMsgid);\n              break;\n            // Slowoff command failed..\n\n            case \"usage_slow_off\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseSlowoff\"], noticeAndMsgid);\n              break;\n            // Timeout command failed..\n\n            case \"usage_timeout\":\n            case \"bad_timeout_admin\":\n            case \"bad_timeout_broadcaster\":\n            case \"bad_timeout_duration\":\n            case \"bad_timeout_global_mod\":\n            case \"bad_timeout_self\":\n            case \"bad_timeout_staff\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseTimeout\"], noticeAndMsgid);\n              break;\n            // Unban command success..\n            // Unban can also be used to cancel an active timeout.\n\n            case \"untimeout_success\":\n            case \"unban_success\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseUnban\"], noticeAndNull);\n              break;\n            // Unban command failed..\n\n            case \"usage_unban\":\n            case \"bad_unban_no_ban\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseUnban\"], noticeAndMsgid);\n              break;\n            // Delete command failed..\n\n            case \"usage_delete\":\n            case \"bad_delete_message_error\":\n            case \"bad_delete_message_broadcaster\":\n            case \"bad_delete_message_mod\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseDeletemessage\"], noticeAndMsgid);\n              break;\n            // Unhost command failed..\n\n            case \"usage_unhost\":\n            case \"not_hosting\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseUnhost\"], noticeAndMsgid);\n              break;\n            // Whisper command failed..\n\n            case \"whisper_invalid_login\":\n            case \"whisper_invalid_self\":\n            case \"whisper_limit_per_min\":\n            case \"whisper_limit_per_sec\":\n            case \"whisper_restricted\":\n            case \"whisper_restricted_recipient\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseWhisper\"], noticeAndMsgid);\n              break;\n            // Permission error..\n\n            case \"no_permission\":\n            case \"msg_banned\":\n            case \"msg_room_not_found\":\n            case \"msg_channel_suspended\":\n            case \"tos_ban\":\n            case \"invalid_user\":\n              this.log.info(basicLog);\n              this.emits([\"notice\", \"_promiseBan\", \"_promiseClear\", \"_promiseUnban\", \"_promiseTimeout\", \"_promiseDeletemessage\", \"_promiseMods\", \"_promiseMod\", \"_promiseUnmod\", \"_promiseVips\", \"_promiseVip\", \"_promiseUnvip\", \"_promiseCommercial\", \"_promiseHost\", \"_promiseUnhost\", \"_promiseJoin\", \"_promisePart\", \"_promiseR9kbeta\", \"_promiseR9kbetaoff\", \"_promiseSlow\", \"_promiseSlowoff\", \"_promiseFollowers\", \"_promiseFollowersoff\", \"_promiseSubscribers\", \"_promiseSubscribersoff\", \"_promiseEmoteonly\", \"_promiseEmoteonlyoff\", \"_promiseWhisper\"], [noticeArr, [msgid, channel]]);\n              break;\n            // Automod-related..\n\n            case \"msg_rejected\":\n            case \"msg_rejected_mandatory\":\n              this.log.info(basicLog);\n              this.emit(\"automod\", channel, msgid, msg);\n              break;\n            // Unrecognized command..\n\n            case \"unrecognized_cmd\":\n              this.log.info(basicLog);\n              this.emit(\"notice\", channel, msgid, msg);\n              break;\n            // Send the following msg-ids to the notice event listener..\n\n            case \"cmds_available\":\n            case \"host_target_went_offline\":\n            case \"msg_censored_broadcaster\":\n            case \"msg_duplicate\":\n            case \"msg_emoteonly\":\n            case \"msg_verified_email\":\n            case \"msg_ratelimit\":\n            case \"msg_subsonly\":\n            case \"msg_timedout\":\n            case \"msg_bad_characters\":\n            case \"msg_channel_blocked\":\n            case \"msg_facebook\":\n            case \"msg_followersonly\":\n            case \"msg_followersonly_followed\":\n            case \"msg_followersonly_zero\":\n            case \"msg_slowmode\":\n            case \"msg_suspended\":\n            case \"no_help\":\n            case \"usage_disconnect\":\n            case \"usage_help\":\n            case \"usage_me\":\n            case \"unavailable_command\":\n              this.log.info(basicLog);\n              this.emit(\"notice\", channel, msgid, msg);\n              break;\n            // Ignore this because we are already listening to HOSTTARGET..\n\n            case \"host_on\":\n            case \"host_off\":\n              break;\n\n            default:\n              if (msg.includes(\"Login unsuccessful\") || msg.includes(\"Login authentication failed\")) {\n                this.wasCloseCalled = false;\n                this.reconnect = false;\n                this.reason = msg;\n                this.log.error(this.reason);\n                this.ws.close();\n              } else if (msg.includes(\"Error logging in\") || msg.includes(\"Improperly formatted auth\")) {\n                this.wasCloseCalled = false;\n                this.reconnect = false;\n                this.reason = msg;\n                this.log.error(this.reason);\n                this.ws.close();\n              } else if (msg.includes(\"Invalid NICK\")) {\n                this.wasCloseCalled = false;\n                this.reconnect = false;\n                this.reason = \"Invalid NICK.\";\n                this.log.error(this.reason);\n                this.ws.close();\n              } else {\n                this.log.warn(\"Could not parse NOTICE from tmi.twitch.tv:\\n\" + JSON.stringify(message, null, 4));\n                this.emit(\"notice\", channel, msgid, msg);\n              }\n\n              break;\n          }\n\n          break;\n        // Handle subanniversary / resub..\n\n        case \"USERNOTICE\":\n          var username = tags[\"display-name\"] || tags[\"login\"];\n          var plan = tags[\"msg-param-sub-plan\"] || \"\";\n          var planName = _.unescapeIRC(_.get(tags[\"msg-param-sub-plan-name\"], \"\")) || null;\n          var prime = plan.includes(\"Prime\");\n          var methods = {\n            prime: prime,\n            plan: plan,\n            planName: planName\n          };\n          var streakMonths = ~~(tags[\"msg-param-streak-months\"] || 0);\n          var recipient = tags[\"msg-param-recipient-display-name\"] || tags[\"msg-param-recipient-user-name\"];\n          var giftSubCount = ~~tags[\"msg-param-mass-gift-count\"];\n          tags[\"message-type\"] = msgid;\n\n          switch (msgid) {\n            // Handle resub\n            case \"resub\":\n              this.emits([\"resub\", \"subanniversary\"], [[channel, username, streakMonths, msg, tags, methods]]);\n              break;\n            // Handle sub\n\n            case \"sub\":\n              this.emit(\"subscription\", channel, username, methods, msg, tags);\n              break;\n            // Handle gift sub\n\n            case \"subgift\":\n              this.emit(\"subgift\", channel, username, streakMonths, recipient, methods, tags);\n              break;\n            // Handle anonymous gift sub\n            // Need proof that this event occur\n\n            case \"anonsubgift\":\n              this.emit(\"anonsubgift\", channel, streakMonths, recipient, methods, tags);\n              break;\n            // Handle random gift subs\n\n            case \"submysterygift\":\n              this.emit(\"submysterygift\", channel, username, giftSubCount, methods, tags);\n              break;\n            // Handle anonymous random gift subs\n            // Need proof that this event occur\n\n            case \"anonsubmysterygift\":\n              this.emit(\"anonsubmysterygift\", channel, giftSubCount, methods, tags);\n              break;\n            // Handle user upgrading from Prime to a normal tier sub\n\n            case \"primepaidupgrade\":\n              this.emit(\"primepaidupgrade\", channel, username, methods, tags);\n              break;\n            // Handle user upgrading from a gifted sub\n\n            case \"giftpaidupgrade\":\n              var sender = tags[\"msg-param-sender-name\"] || tags[\"msg-param-sender-login\"];\n              this.emit(\"giftpaidupgrade\", channel, username, sender, tags);\n              break;\n            // Handle user upgrading from an anonymous gifted sub\n\n            case \"anongiftpaidupgrade\":\n              this.emit(\"anongiftpaidupgrade\", channel, username, tags);\n              break;\n            // Handle raid\n\n            case \"raid\":\n              var username = tags[\"msg-param-displayName\"] || tags[\"msg-param-login\"];\n              var viewers = +tags[\"msg-param-viewerCount\"];\n              this.emit(\"raided\", channel, username, viewers, tags);\n              break;\n            // Handle ritual\n\n            case \"ritual\":\n              var ritualName = tags[\"msg-param-ritual-name\"];\n\n              switch (ritualName) {\n                // Handle new chatter ritual\n                case \"new_chatter\":\n                  this.emit(\"newchatter\", channel, username, tags, msg);\n                  break;\n                // All unknown rituals should be passed through\n\n                default:\n                  this.emit(\"ritual\", ritualName, channel, username, tags, msg);\n                  break;\n              }\n\n              break;\n            // All other msgid events should be emitted under a usernotice event\n            // until it comes up and needs to be added..\n\n            default:\n              this.emit(\"usernotice\", msgid, channel, tags, msg);\n              break;\n          }\n\n          break;\n        // Channel is now hosting another channel or exited host mode..\n\n        case \"HOSTTARGET\":\n          var msgSplit = msg.split(\" \");\n          var viewers = ~~msgSplit[1] || 0; // Stopped hosting..\n\n          if (msgSplit[0] === \"-\") {\n            this.log.info(\"[\" + channel + \"] Exited host mode.\");\n            this.emits([\"unhost\", \"_promiseUnhost\"], [[channel, viewers], [null]]);\n          } // Now hosting..\n          else {\n              this.log.info(\"[\" + channel + \"] Now hosting \" + msgSplit[0] + \" for \" + viewers + \" viewer(s).\");\n              this.emit(\"hosting\", channel, msgSplit[0], viewers);\n            }\n\n          break;\n        // Someone has been timed out or chat has been cleared by a moderator..\n\n        case \"CLEARCHAT\":\n          // User has been banned / timed out by a moderator..\n          if (message.params.length > 1) {\n            // Duration returns null if it's a ban, otherwise it's a timeout..\n            var duration = _.get(message.tags[\"ban-duration\"], null);\n\n            if (_.isNull(duration)) {\n              this.log.info(\"[\" + channel + \"] \" + msg + \" has been banned.\");\n              this.emit(\"ban\", channel, msg, null, message.tags);\n            } else {\n              this.log.info(\"[\" + channel + \"] \" + msg + \" has been timed out for \" + duration + \" seconds.\");\n              this.emit(\"timeout\", channel, msg, null, ~~duration, message.tags);\n            }\n          } // Chat was cleared by a moderator..\n          else {\n              this.log.info(\"[\" + channel + \"] Chat was cleared by a moderator.\");\n              this.emits([\"clearchat\", \"_promiseClear\"], [[channel], [null]]);\n            }\n\n          break;\n        // Someone's message has been deleted\n\n        case \"CLEARMSG\":\n          if (message.params.length > 1) {\n            var deletedMessage = msg;\n            var username = tags[\"login\"];\n            tags[\"message-type\"] = \"messagedeleted\";\n            this.log.info(\"[\" + channel + \"] \" + username + \"'s message has been deleted.\");\n            this.emit(\"messagedeleted\", channel, username, deletedMessage, tags);\n          }\n\n          break;\n        // Received a reconnection request from the server..\n\n        case \"RECONNECT\":\n          this.log.info(\"Received RECONNECT request from Twitch..\");\n          this.log.info(\"Disconnecting and reconnecting in \" + Math.round(this.reconnectTimer / 1000) + \" seconds..\");\n          this.disconnect().catch(function (err) {\n            return _this.log.error(err);\n          });\n          setTimeout(function () {\n            return _this.connect().catch(function (err) {\n              return _this.log.error(err);\n            });\n          }, this.reconnectTimer);\n          break;\n        // Received when joining a channel and every time you send a PRIVMSG to a channel.\n\n        case \"USERSTATE\":\n          message.tags.username = this.username; // Add the client to the moderators of this room..\n\n          if (message.tags[\"user-type\"] === \"mod\") {\n            if (!this.moderators[channel]) {\n              this.moderators[channel] = [];\n            }\n\n            if (!this.moderators[channel].includes(this.username)) {\n              this.moderators[channel].push(this.username);\n            }\n          } // Logged in and username doesn't start with justinfan..\n\n\n          if (!_.isJustinfan(this.getUsername()) && !this.userstate[channel]) {\n            this.userstate[channel] = tags;\n            this.lastJoined = channel;\n            this.channels.push(channel);\n            this.log.info(\"Joined \" + channel);\n            this.emit(\"join\", channel, _.username(this.getUsername()), true);\n          } // // Emote-sets has changed, update it..\n          // if(message.tags[\"emote-sets\"] !== this.emotes) {\n          // \tthis._updateEmoteset(message.tags[\"emote-sets\"]);\n          // }\n\n\n          this.userstate[channel] = tags;\n          break;\n        // Describe non-channel-specific state informations..\n\n        case \"GLOBALUSERSTATE\":\n          this.globaluserstate = tags; // Received emote-sets..\n\n          if (typeof message.tags[\"emote-sets\"] !== \"undefined\") {// this._updateEmoteset(message.tags[\"emote-sets\"]);\n          }\n\n          break;\n        // Received when joining a channel and every time one of the chat room settings, like slow mode, change.\n        // The message on join contains all room settings.\n\n        case \"ROOMSTATE\":\n          // We use this notice to know if we successfully joined a channel..\n          if (_.channel(this.lastJoined) === channel) {\n            this.emit(\"_promiseJoin\", null, channel);\n          } // Provide the channel name in the tags before emitting it..\n\n\n          message.tags.channel = channel;\n          this.emit(\"roomstate\", channel, message.tags);\n\n          if (!message.tags.hasOwnProperty(\"subs-only\")) {\n            // Handle slow mode here instead of the slow_on/off notice..\n            // This room is now in slow mode. You may send messages every slow_duration seconds.\n            if (message.tags.hasOwnProperty(\"slow\")) {\n              if (typeof message.tags.slow === \"boolean\" && !message.tags.slow) {\n                var disabled = [channel, false, 0];\n                this.log.info(\"[\" + channel + \"] This room is no longer in slow mode.\");\n                this.emits([\"slow\", \"slowmode\", \"_promiseSlowoff\"], [disabled, disabled, [null]]);\n              } else {\n                var seconds = ~~message.tags.slow;\n                var enabled = [channel, true, seconds];\n                this.log.info(\"[\" + channel + \"] This room is now in slow mode.\");\n                this.emits([\"slow\", \"slowmode\", \"_promiseSlow\"], [enabled, enabled, [null]]);\n              }\n            } // Handle followers only mode here instead of the followers_on/off notice..\n            // This room is now in follower-only mode.\n            // This room is now in <duration> followers-only mode.\n            // This room is no longer in followers-only mode.\n            // duration is in minutes (string)\n            // -1 when /followersoff (string)\n            // false when /followers with no duration (boolean)\n\n\n            if (message.tags.hasOwnProperty(\"followers-only\")) {\n              if (message.tags[\"followers-only\"] === \"-1\") {\n                var disabled = [channel, false, 0];\n                this.log.info(\"[\" + channel + \"] This room is no longer in followers-only mode.\");\n                this.emits([\"followersonly\", \"followersmode\", \"_promiseFollowersoff\"], [disabled, disabled, [null]]);\n              } else {\n                var minutes = ~~message.tags[\"followers-only\"];\n                var enabled = [channel, true, minutes];\n                this.log.info(\"[\" + channel + \"] This room is now in follower-only mode.\");\n                this.emits([\"followersonly\", \"followersmode\", \"_promiseFollowers\"], [enabled, enabled, [null]]);\n              }\n            }\n          }\n\n          break;\n        // Wrong cluster..\n\n        case \"SERVERCHANGE\":\n          break;\n\n        default:\n          this.log.warn(\"Could not parse message from tmi.twitch.tv:\\n\" + JSON.stringify(message, null, 4));\n          break;\n      }\n    } // Messages from jtv..\n    else if (message.prefix === \"jtv\") {\n        switch (message.command) {\n          case \"MODE\":\n            if (msg === \"+o\") {\n              // Add username to the moderators..\n              if (!this.moderators[channel]) {\n                this.moderators[channel] = [];\n              }\n\n              if (!this.moderators[channel].includes(message.params[2])) {\n                this.moderators[channel].push(message.params[2]);\n              }\n\n              this.emit(\"mod\", channel, message.params[2]);\n            } else if (msg === \"-o\") {\n              // Remove username from the moderators..\n              if (!this.moderators[channel]) {\n                this.moderators[channel] = [];\n              }\n\n              this.moderators[channel].filter(function (value) {\n                return value != message.params[2];\n              });\n              this.emit(\"unmod\", channel, message.params[2]);\n            }\n\n            break;\n\n          default:\n            this.log.warn(\"Could not parse message from jtv:\\n\" + JSON.stringify(message, null, 4));\n            break;\n        }\n      } // Anything else..\n      else {\n          switch (message.command) {\n            case \"353\":\n              this.emit(\"names\", message.params[2], message.params[3].split(\" \"));\n              break;\n\n            case \"366\":\n              break;\n            // Someone has joined the channel..\n\n            case \"JOIN\":\n              var nick = message.prefix.split(\"!\")[0]; // Joined a channel as a justinfan (anonymous) user..\n\n              if (_.isJustinfan(this.getUsername()) && this.username === nick) {\n                this.lastJoined = channel;\n                this.channels.push(channel);\n                this.log.info(\"Joined \" + channel);\n                this.emit(\"join\", channel, nick, true);\n              } // Someone else joined the channel, just emit the join event..\n\n\n              if (this.username !== nick) {\n                this.emit(\"join\", channel, nick, false);\n              }\n\n              break;\n            // Someone has left the channel..\n\n            case \"PART\":\n              var isSelf = false;\n              var nick = message.prefix.split(\"!\")[0]; // Client left a channel..\n\n              if (this.username === nick) {\n                isSelf = true;\n\n                if (this.userstate[channel]) {\n                  delete this.userstate[channel];\n                }\n\n                var index = this.channels.indexOf(channel);\n\n                if (index !== -1) {\n                  this.channels.splice(index, 1);\n                }\n\n                var index = this.opts.channels.indexOf(channel);\n\n                if (index !== -1) {\n                  this.opts.channels.splice(index, 1);\n                }\n\n                this.log.info(\"Left \" + channel);\n                this.emit(\"_promisePart\", null);\n              } // Client or someone else left the channel, emit the part event..\n\n\n              this.emit(\"part\", channel, nick, isSelf);\n              break;\n            // Received a whisper..\n\n            case \"WHISPER\":\n              var nick = message.prefix.split(\"!\")[0];\n              this.log.info(\"[WHISPER] <\" + nick + \">: \" + msg); // Update the tags to provide the username..\n\n              if (!message.tags.hasOwnProperty(\"username\")) {\n                message.tags.username = nick;\n              }\n\n              message.tags[\"message-type\"] = \"whisper\";\n\n              var from = _.channel(message.tags.username); // Emit for both, whisper and message..\n\n\n              this.emits([\"whisper\", \"message\"], [[from, message.tags, msg, false]]);\n              break;\n\n            case \"PRIVMSG\":\n              // Add username (lowercase) to the tags..\n              message.tags.username = message.prefix.split(\"!\")[0]; // Message from JTV..\n\n              if (message.tags.username === \"jtv\") {\n                var name = _.username(msg.split(\" \")[0]);\n\n                var autohost = msg.includes(\"auto\"); // Someone is hosting the channel and the message contains how many viewers..\n\n                if (msg.includes(\"hosting you for\")) {\n                  var count = _.extractNumber(msg);\n\n                  this.emit(\"hosted\", channel, name, count, autohost);\n                } // Some is hosting the channel, but no viewer(s) count provided in the message..\n                else if (msg.includes(\"hosting you\")) {\n                    this.emit(\"hosted\", channel, name, 0, autohost);\n                  }\n              } else {\n                var messagesLogLevel = _.get(this.opts.options.messagesLogLevel, \"info\"); // Message is an action (/me <message>)..\n\n\n                var actionMessage = _.actionMessage(msg);\n\n                message.tags[\"message-type\"] = actionMessage ? \"action\" : \"chat\";\n                msg = actionMessage ? actionMessage[1] : msg; // Check for Bits prior to actions message\n\n                if (message.tags.hasOwnProperty(\"bits\")) {\n                  this.emit(\"cheer\", channel, message.tags, msg);\n                } else {\n                  //Handle Channel Point Redemptions (Require's Text Input)\n                  if (message.tags.hasOwnProperty(\"msg-id\")) {\n                    if (message.tags[\"msg-id\"] === \"highlighted-message\") {\n                      var rewardtype = message.tags[\"msg-id\"];\n                      this.emit(\"redeem\", channel, message.tags.username, rewardtype, message.tags, msg);\n                    } else if (message.tags[\"msg-id\"] === \"skip-subs-mode-message\") {\n                      var rewardtype = message.tags[\"msg-id\"];\n                      this.emit(\"redeem\", channel, message.tags.username, rewardtype, message.tags, msg);\n                    }\n                  } else if (message.tags.hasOwnProperty(\"custom-reward-id\")) {\n                    var rewardtype = message.tags[\"custom-reward-id\"];\n                    this.emit(\"redeem\", channel, message.tags.username, rewardtype, message.tags, msg);\n                  }\n\n                  if (actionMessage) {\n                    this.log[messagesLogLevel](\"[\" + channel + \"] *<\" + message.tags.username + \">: \" + msg);\n                    this.emits([\"action\", \"message\"], [[channel, message.tags, msg, false]]);\n                  } // Message is a regular chat message..\n                  else {\n                      this.log[messagesLogLevel](\"[\" + channel + \"] <\" + message.tags.username + \">: \" + msg);\n                      this.emits([\"chat\", \"message\"], [[channel, message.tags, msg, false]]);\n                    }\n                }\n              }\n\n              break;\n\n            default:\n              this.log.warn(\"Could not parse message:\\n\" + JSON.stringify(message, null, 4));\n              break;\n          }\n        }\n}; // Connect to server..\n\n\nclient.prototype.connect = function connect() {\n  var _this2 = this;\n\n  return new Promise(function (resolve, reject) {\n    _this2.server = _.get(_this2.opts.connection.server, \"irc-ws.chat.twitch.tv\");\n    _this2.port = _.get(_this2.opts.connection.port, 80); // Override port if using a secure connection..\n\n    if (_this2.secure) {\n      _this2.port = 443;\n    }\n\n    if (_this2.port === 443) {\n      _this2.secure = true;\n    }\n\n    _this2.reconnectTimer = _this2.reconnectTimer * _this2.reconnectDecay;\n\n    if (_this2.reconnectTimer >= _this2.maxReconnectInterval) {\n      _this2.reconnectTimer = _this2.maxReconnectInterval;\n    } // Connect to server from configuration..\n\n\n    _this2._openConnection();\n\n    _this2.once(\"_promiseConnect\", function (err) {\n      if (!err) {\n        resolve([_this2.server, ~~_this2.port]);\n      } else {\n        reject(err);\n      }\n    });\n  });\n}; // Open a connection..\n\n\nclient.prototype._openConnection = function _openConnection() {\n  this.ws = new _WebSocket((this.secure ? \"wss\" : \"ws\") + \"://\" + this.server + \":\" + this.port + \"/\", \"irc\");\n  this.ws.onmessage = this._onMessage.bind(this);\n  this.ws.onerror = this._onError.bind(this);\n  this.ws.onclose = this._onClose.bind(this);\n  this.ws.onopen = this._onOpen.bind(this);\n}; // Called when the WebSocket connection's readyState changes to OPEN.\n// Indicates that the connection is ready to send and receive data..\n\n\nclient.prototype._onOpen = function _onOpen() {\n  var _this3 = this;\n\n  if (_.isNull(this.ws) || this.ws.readyState !== 1) {\n    return;\n  } // Emitting \"connecting\" event..\n\n\n  this.log.info(\"Connecting to \" + this.server + \" on port \" + this.port + \"..\");\n  this.emit(\"connecting\", this.server, ~~this.port);\n  this.username = _.get(this.opts.identity.username, _.justinfan());\n\n  this._getToken().then(function (token) {\n    var password = _.password(token); // Emitting \"logon\" event..\n\n\n    _this3.log.info(\"Sending authentication to server..\");\n\n    _this3.emit(\"logon\"); // Authentication..\n\n\n    _this3.ws.send(\"CAP REQ :twitch.tv/tags twitch.tv/commands twitch.tv/membership\");\n\n    if (password) {\n      _this3.ws.send(\"PASS \" + password);\n    } else if (_.isJustinfan(_this3.username)) {\n      _this3.ws.send(\"PASS SCHMOOPIIE\");\n    }\n\n    _this3.ws.send(\"NICK \" + _this3.username);\n  }).catch(function (err) {\n    _this3.emits([\"_promiseConnect\", \"disconnected\"], [[err], [\"Could not get a token.\"]]);\n  });\n}; // Fetches a token from the option.\n\n\nclient.prototype._getToken = function _getPassword() {\n  var passwordOption = this.opts.identity.password;\n  var password = void 0;\n\n  if (typeof passwordOption === \"function\") {\n    password = passwordOption();\n\n    if (password instanceof Promise) {\n      return password;\n    }\n\n    return Promise.resolve(password);\n  }\n\n  return Promise.resolve(passwordOption);\n}; // Called when a message is received from the server..\n\n\nclient.prototype._onMessage = function _onMessage(event) {\n  var _this4 = this;\n\n  var parts = event.data.split(\"\\r\\n\");\n  parts.forEach(function (str) {\n    if (!_.isNull(str)) {\n      _this4.handleMessage(parse.msg(str));\n    }\n  });\n}; // Called when an error occurs..\n\n\nclient.prototype._onError = function _onError() {\n  var _this5 = this;\n\n  this.moderators = {};\n  this.userstate = {};\n  this.globaluserstate = {}; // Stop the internal ping timeout check interval..\n\n  clearInterval(this.pingLoop);\n  clearTimeout(this.pingTimeout);\n  this.reason = !_.isNull(this.ws) ? \"Unable to connect.\" : \"Connection closed.\";\n  this.emits([\"_promiseConnect\", \"disconnected\"], [[this.reason]]); // Reconnect to server..\n\n  if (this.reconnect && this.reconnections === this.maxReconnectAttempts) {\n    this.emit(\"maxreconnect\");\n    this.log.error(\"Maximum reconnection attempts reached.\");\n  }\n\n  if (this.reconnect && !this.reconnecting && this.reconnections <= this.maxReconnectAttempts - 1) {\n    this.reconnecting = true;\n    this.reconnections = this.reconnections + 1;\n    this.log.error(\"Reconnecting in \" + Math.round(this.reconnectTimer / 1000) + \" seconds..\");\n    this.emit(\"reconnect\");\n    setTimeout(function () {\n      _this5.reconnecting = false;\n\n      _this5.connect().catch(function (err) {\n        return _this5.log.error(err);\n      });\n    }, this.reconnectTimer);\n  }\n\n  this.ws = null;\n}; // Called when the WebSocket connection's readyState changes to CLOSED..\n\n\nclient.prototype._onClose = function _onClose() {\n  var _this6 = this;\n\n  this.moderators = {};\n  this.userstate = {};\n  this.globaluserstate = {}; // Stop the internal ping timeout check interval..\n\n  clearInterval(this.pingLoop);\n  clearTimeout(this.pingTimeout); // User called .disconnect(), don't try to reconnect.\n\n  if (this.wasCloseCalled) {\n    this.wasCloseCalled = false;\n    this.reason = \"Connection closed.\";\n    this.log.info(this.reason);\n    this.emits([\"_promiseConnect\", \"_promiseDisconnect\", \"disconnected\"], [[this.reason], [null], [this.reason]]);\n  } // Got disconnected from server..\n  else {\n      this.emits([\"_promiseConnect\", \"disconnected\"], [[this.reason]]); // Reconnect to server..\n\n      if (this.reconnect && this.reconnections === this.maxReconnectAttempts) {\n        this.emit(\"maxreconnect\");\n        this.log.error(\"Maximum reconnection attempts reached.\");\n      }\n\n      if (this.reconnect && !this.reconnecting && this.reconnections <= this.maxReconnectAttempts - 1) {\n        this.reconnecting = true;\n        this.reconnections = this.reconnections + 1;\n        this.log.error(\"Could not connect to server. Reconnecting in \" + Math.round(this.reconnectTimer / 1000) + \" seconds..\");\n        this.emit(\"reconnect\");\n        setTimeout(function () {\n          _this6.reconnecting = false;\n\n          _this6.connect().catch(function (err) {\n            return _this6.log.error(err);\n          });\n        }, this.reconnectTimer);\n      }\n    }\n\n  this.ws = null;\n}; // Minimum of 600ms for command promises, if current latency exceeds, add 100ms to it to make sure it doesn't get timed out..\n\n\nclient.prototype._getPromiseDelay = function _getPromiseDelay() {\n  if (this.currentLatency <= 600) {\n    return 600;\n  } else {\n    return this.currentLatency + 100;\n  }\n}; // Send command to server or channel..\n\n\nclient.prototype._sendCommand = function _sendCommand(delay, channel, command, fn) {\n  var _this7 = this; // Race promise against delay..\n\n\n  return new Promise(function (resolve, reject) {\n    // Make sure the socket is opened..\n    if (_.isNull(_this7.ws) || _this7.ws.readyState !== 1) {\n      // Disconnected from server..\n      return reject(\"Not connected to server.\");\n    } else if (typeof delay === \"number\") {\n      _.promiseDelay(delay).then(function () {\n        return reject(\"No response from Twitch.\");\n      });\n    } // Executing a command on a channel..\n\n\n    if (!_.isNull(channel)) {\n      var chan = _.channel(channel);\n\n      _this7.log.info(\"[\" + chan + \"] Executing command: \" + command);\n\n      _this7.ws.send(\"PRIVMSG \" + chan + \" :\" + command);\n    } // Executing a raw command..\n    else {\n        _this7.log.info(\"Executing command: \" + command);\n\n        _this7.ws.send(command);\n      }\n\n    if (typeof fn === 'function') {\n      fn(resolve, reject);\n    } else {\n      resolve();\n    }\n  });\n}; // Send a message to channel..\n\n\nclient.prototype._sendMessage = function _sendMessage(delay, channel, message, fn) {\n  var _this8 = this; // Promise a result..\n\n\n  return new Promise(function (resolve, reject) {\n    // Make sure the socket is opened and not logged in as a justinfan user..\n    if (_.isNull(_this8.ws) || _this8.ws.readyState !== 1) {\n      return reject(\"Not connected to server.\");\n    } else if (_.isJustinfan(_this8.getUsername())) {\n      return reject(\"Cannot send anonymous messages.\");\n    }\n\n    var chan = _.channel(channel);\n\n    if (!_this8.userstate[chan]) {\n      _this8.userstate[chan] = {};\n    } // Split long lines otherwise they will be eaten by the server..\n\n\n    if (message.length >= 500) {\n      var msg = _.splitLine(message, 500);\n\n      message = msg[0];\n      setTimeout(function () {\n        _this8._sendMessage(delay, channel, msg[1], function () {});\n      }, 350);\n    }\n\n    _this8.ws.send(\"PRIVMSG \" + chan + \" :\" + message);\n\n    var emotes = {}; // Parse regex and string emotes..\n\n    Object.keys(_this8.emotesets).forEach(function (id) {\n      return _this8.emotesets[id].forEach(function (emote) {\n        var emoteFunc = _.isRegex(emote.code) ? parse.emoteRegex : parse.emoteString;\n        return emoteFunc(message, emote.code, emote.id, emotes);\n      });\n    }); // Merge userstate with parsed emotes..\n\n    var userstate = _.merge(_this8.userstate[chan], parse.emotes({\n      emotes: parse.transformEmotes(emotes) || null\n    }));\n\n    var messagesLogLevel = _.get(_this8.opts.options.messagesLogLevel, \"info\"); // Message is an action (/me <message>)..\n\n\n    var actionMessage = _.actionMessage(message);\n\n    if (actionMessage) {\n      userstate[\"message-type\"] = \"action\";\n\n      _this8.log[messagesLogLevel](\"[\" + chan + \"] *<\" + _this8.getUsername() + \">: \" + actionMessage[1]);\n\n      _this8.emits([\"action\", \"message\"], [[chan, userstate, actionMessage[1], true]]);\n    } // Message is a regular chat message..\n    else {\n        userstate[\"message-type\"] = \"chat\";\n\n        _this8.log[messagesLogLevel](\"[\" + chan + \"] <\" + _this8.getUsername() + \">: \" + message);\n\n        _this8.emits([\"chat\", \"message\"], [[chan, userstate, message, true]]);\n      }\n\n    if (typeof fn === 'function') {\n      fn(resolve, reject);\n    } else {\n      resolve();\n    }\n  });\n}; // Grab the emote-sets object from the API..\n\n\nclient.prototype._updateEmoteset = function _updateEmoteset(sets) {\n  var _this9 = this;\n\n  this.emotes = sets;\n\n  this._getToken().then(function (token) {\n    return _this9.api({\n      url: \"/chat/emoticon_images?emotesets=\" + sets,\n      headers: {\n        \"Authorization\": \"OAuth \" + _.token(token),\n        \"Client-ID\": _this9.clientId\n      }\n    }, function (err, res, body) {\n      if (!err) {\n        _this9.emotesets = body[\"emoticon_sets\"] || {};\n        return _this9.emit(\"emotesets\", sets, _this9.emotesets);\n      }\n\n      setTimeout(function () {\n        return _this9._updateEmoteset(sets);\n      }, 60000);\n    });\n  }).catch(function () {\n    return setTimeout(function () {\n      return _this9._updateEmoteset(sets);\n    }, 60000);\n  });\n}; // Get current username..\n\n\nclient.prototype.getUsername = function getUsername() {\n  return this.username;\n}; // Get current options..\n\n\nclient.prototype.getOptions = function getOptions() {\n  return this.opts;\n}; // Get current channels..\n\n\nclient.prototype.getChannels = function getChannels() {\n  return this.channels;\n}; // Check if username is a moderator on a channel..\n\n\nclient.prototype.isMod = function isMod(channel, username) {\n  var chan = _.channel(channel);\n\n  if (!this.moderators[chan]) {\n    this.moderators[chan] = [];\n  }\n\n  return this.moderators[chan].includes(_.username(username));\n}; // Get readyState..\n\n\nclient.prototype.readyState = function readyState() {\n  if (_.isNull(this.ws)) {\n    return \"CLOSED\";\n  }\n\n  return [\"CONNECTING\", \"OPEN\", \"CLOSING\", \"CLOSED\"][this.ws.readyState];\n}; // Determine if the client has a WebSocket and it's open..\n\n\nclient.prototype._isConnected = function _isConnected() {\n  return this.ws !== null && this.ws.readyState === 1;\n}; // Disconnect from server..\n\n\nclient.prototype.disconnect = function disconnect() {\n  var _this10 = this;\n\n  return new Promise(function (resolve, reject) {\n    if (!_.isNull(_this10.ws) && _this10.ws.readyState !== 3) {\n      _this10.wasCloseCalled = true;\n\n      _this10.log.info(\"Disconnecting from server..\");\n\n      _this10.ws.close();\n\n      _this10.once(\"_promiseDisconnect\", function () {\n        return resolve([_this10.server, ~~_this10.port]);\n      });\n    } else {\n      _this10.log.error(\"Cannot disconnect from server. Socket is not opened or connection is already closing.\");\n\n      reject(\"Cannot disconnect from server. Socket is not opened or connection is already closing.\");\n    }\n  });\n}; // Expose everything, for browser and Node..\n\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports = client;\n}\n\nif (typeof window !== \"undefined\") {\n  window.tmi = {};\n  window.tmi.client = client;\n  window.tmi.Client = client;\n}","map":{"version":3,"sources":["C:/git/react-apps/react-twitchlady/node_modules/react-tmi/lib/client.js"],"names":["api","require","commands","EventEmitter","logger","parse","timer","_global","global","window","_WebSocket","WebSocket","_","client","opts","get","channels","connection","identity","options","clientId","_globalDefaultChannel","channel","globalDefaultChannel","maxReconnectAttempts","Infinity","maxReconnectInterval","reconnect","reconnectDecay","reconnectInterval","reconnecting","reconnections","reconnectTimer","secure","server","port","emotes","emotesets","currentLatency","globaluserstate","lastJoined","latency","Date","moderators","pingLoop","pingTimeout","reason","username","userstate","wasCloseCalled","ws","level","debug","log","setLevel","e","forEach","part","index","theArray","call","setMaxListeners","inherits","prototype","emits","types","values","i","length","val","emit","apply","concat","off","removeListener","methodName","handleMessage","message","_this","isNull","listenerCount","JSON","stringify","params","msg","msgid","tags","badges","badgeInfo","key","value","isBoolean","isString","unescapeIRC","prefix","command","_isConnected","send","currDate","getTime","clearTimeout","warn","info","setInterval","setTimeout","error","close","clearInterval","timeout","joinInterval","joinQueue","queue","joinChannels","union","_loop","add","join","catch","err","run","nullArr","noticeArr","msgidArr","channelTrueArr","channelFalseArr","noticeAndNull","noticeAndMsgid","basicLog","mods","split","toLowerCase","filter","n","endsWith","slice","vips","remainingHost","isNaN","parseInt","includes","plan","planName","prime","methods","streakMonths","recipient","giftSubCount","sender","viewers","ritualName","msgSplit","duration","deletedMessage","Math","round","disconnect","connect","push","isJustinfan","getUsername","hasOwnProperty","slow","disabled","seconds","enabled","minutes","nick","isSelf","indexOf","splice","from","name","autohost","count","extractNumber","messagesLogLevel","actionMessage","rewardtype","_this2","Promise","resolve","reject","_openConnection","once","onmessage","_onMessage","bind","onerror","_onError","onclose","_onClose","onopen","_onOpen","_this3","readyState","justinfan","_getToken","then","token","password","_getPassword","passwordOption","event","_this4","parts","data","str","_this5","_this6","_getPromiseDelay","_sendCommand","delay","fn","_this7","promiseDelay","chan","_sendMessage","_this8","splitLine","Object","keys","id","emote","emoteFunc","isRegex","code","emoteRegex","emoteString","merge","transformEmotes","_updateEmoteset","sets","_this9","url","headers","res","body","getOptions","getChannels","isMod","_this10","module","exports","tmi","Client"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar api = require(\"./api\");\nvar commands = require(\"./commands\");\nvar EventEmitter = require(\"./events\").EventEmitter;\nvar logger = require(\"./logger\");\nvar parse = require(\"./parser\");\nvar timer = require(\"./timer\");\nvar _global = typeof global !== \"undefined\" ? global : typeof window !== \"undefined\" ? window : {};\nvar _WebSocket = _global.WebSocket || require(\"ws\");\nvar _ = require(\"./utils\");\n\n// Client instance..\nvar client = function client(opts) {\n\tif (this instanceof client === false) {\n\t\treturn new client(opts);\n\t}\n\n\tthis.opts = _.get(opts, {});\n\tthis.opts.channels = this.opts.channels || [];\n\tthis.opts.connection = this.opts.connection || {};\n\tthis.opts.identity = this.opts.identity || {};\n\tthis.opts.options = this.opts.options || {};\n\n\tthis.clientId = _.get(this.opts.options.clientId, null);\n\tthis._globalDefaultChannel = _.channel(_.get(this.opts.options.globalDefaultChannel, \"#tmijs\"));\n\n\tthis.maxReconnectAttempts = _.get(this.opts.connection.maxReconnectAttempts, Infinity);\n\tthis.maxReconnectInterval = _.get(this.opts.connection.maxReconnectInterval, 30000);\n\tthis.reconnect = _.get(this.opts.connection.reconnect, false);\n\tthis.reconnectDecay = _.get(this.opts.connection.reconnectDecay, 1.5);\n\tthis.reconnectInterval = _.get(this.opts.connection.reconnectInterval, 1000);\n\n\tthis.reconnecting = false;\n\tthis.reconnections = 0;\n\tthis.reconnectTimer = this.reconnectInterval;\n\n\tthis.secure = _.get(this.opts.connection.secure, !this.opts.connection.server && !this.opts.connection.port);\n\n\t// Raw data and object for emote-sets..\n\tthis.emotes = \"\";\n\tthis.emotesets = {};\n\n\tthis.channels = [];\n\tthis.currentLatency = 0;\n\tthis.globaluserstate = {};\n\tthis.lastJoined = \"\";\n\tthis.latency = new Date();\n\tthis.moderators = {};\n\tthis.pingLoop = null;\n\tthis.pingTimeout = null;\n\tthis.reason = \"\";\n\tthis.username = \"\";\n\tthis.userstate = {};\n\tthis.wasCloseCalled = false;\n\tthis.ws = null;\n\n\t// Create the logger..\n\tvar level = \"error\";\n\tif (this.opts.options.debug) {\n\t\tlevel = \"info\";\n\t}\n\tthis.log = this.opts.logger || logger;\n\n\ttry {\n\t\tlogger.setLevel(level);\n\t} catch (e) {};\n\n\t// Format the channel names..\n\tthis.opts.channels.forEach(function (part, index, theArray) {\n\t\ttheArray[index] = _.channel(part);\n\t});\n\n\tEventEmitter.call(this);\n\tthis.setMaxListeners(0);\n};\n\n_.inherits(client, EventEmitter);\n\n// Emit multiple events..\nclient.prototype.emits = function emits(types, values) {\n\tfor (var i = 0; i < types.length; i++) {\n\t\tvar val = i < values.length ? values[i] : values[values.length - 1];\n\t\tthis.emit.apply(this, [types[i]].concat(val));\n\t}\n};\n\nclient.prototype.off = client.prototype.removeListener;\n\nclient.prototype.api = api;\n\n// Put all commands in prototype..\nfor (var methodName in commands) {\n\tclient.prototype[methodName] = commands[methodName];\n}\n\n// Handle parsed chat server message..\nclient.prototype.handleMessage = function handleMessage(message) {\n\tvar _this = this;\n\n\tif (_.isNull(message)) {\n\t\treturn;\n\t}\n\n\tif (this.listenerCount(\"raw_message\")) {\n\t\tthis.emit(\"raw_message\", JSON.parse(JSON.stringify(message)), message);\n\t}\n\n\tvar channel = _.channel(_.get(message.params[0], null));\n\tvar msg = _.get(message.params[1], null);\n\tvar msgid = _.get(message.tags[\"msg-id\"], null);\n\n\t// Parse badges, badge-info and emotes..\n\tvar tags = message.tags = parse.badges(parse.badgeInfo(parse.emotes(message.tags)));\n\n\t// Transform IRCv3 tags..\n\tfor (var key in tags) {\n\t\tif (key === \"emote-sets\" || key === \"ban-duration\" || key === \"bits\") {\n\t\t\tcontinue;\n\t\t}\n\t\tvar value = tags[key];\n\t\tif (_.isBoolean(value)) {\n\t\t\tvalue = null;\n\t\t} else if (value === \"1\") {\n\t\t\tvalue = true;\n\t\t} else if (value === \"0\") {\n\t\t\tvalue = false;\n\t\t} else if (_.isString(value)) {\n\t\t\tvalue = _.unescapeIRC(value);\n\t\t}\n\t\ttags[key] = value;\n\t}\n\n\t// Messages with no prefix..\n\tif (_.isNull(message.prefix)) {\n\t\tswitch (message.command) {\n\t\t\t// Received PING from server..\n\t\t\tcase \"PING\":\n\t\t\t\tthis.emit(\"ping\");\n\t\t\t\tif (this._isConnected()) {\n\t\t\t\t\tthis.ws.send(\"PONG\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// Received PONG from server, return current latency..\n\t\t\tcase \"PONG\":\n\t\t\t\tvar currDate = new Date();\n\t\t\t\tthis.currentLatency = (currDate.getTime() - this.latency.getTime()) / 1000;\n\t\t\t\tthis.emits([\"pong\", \"_promisePing\"], [[this.currentLatency]]);\n\n\t\t\t\tclearTimeout(this.pingTimeout);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthis.log.warn(\"Could not parse message with no prefix:\\n\" + JSON.stringify(message, null, 4));\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Messages with \"tmi.twitch.tv\" as a prefix..\n\telse if (message.prefix === \"tmi.twitch.tv\") {\n\t\t\tswitch (message.command) {\n\t\t\t\tcase \"002\":\n\t\t\t\tcase \"003\":\n\t\t\t\tcase \"004\":\n\t\t\t\tcase \"375\":\n\t\t\t\tcase \"376\":\n\t\t\t\tcase \"CAP\":\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Retrieve username from server..\n\t\t\t\tcase \"001\":\n\t\t\t\t\tthis.username = message.params[0];\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Connected to server..\n\t\t\t\tcase \"372\":\n\t\t\t\t\tthis.log.info(\"Connected to server.\");\n\t\t\t\t\tthis.userstate[this._globalDefaultChannel] = {};\n\t\t\t\t\tthis.emits([\"connected\", \"_promiseConnect\"], [[this.server, this.port], [null]]);\n\t\t\t\t\tthis.reconnections = 0;\n\t\t\t\t\tthis.reconnectTimer = this.reconnectInterval;\n\n\t\t\t\t\t// Set an internal ping timeout check interval..\n\t\t\t\t\tthis.pingLoop = setInterval(function () {\n\t\t\t\t\t\t// Make sure the connection is opened before sending the message..\n\t\t\t\t\t\tif (_this._isConnected()) {\n\t\t\t\t\t\t\t_this.ws.send(\"PING\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_this.latency = new Date();\n\t\t\t\t\t\t_this.pingTimeout = setTimeout(function () {\n\t\t\t\t\t\t\tif (!_.isNull(_this.ws)) {\n\t\t\t\t\t\t\t\t_this.wasCloseCalled = false;\n\t\t\t\t\t\t\t\t_this.log.error(\"Ping timeout.\");\n\t\t\t\t\t\t\t\t_this.ws.close();\n\n\t\t\t\t\t\t\t\tclearInterval(_this.pingLoop);\n\t\t\t\t\t\t\t\tclearTimeout(_this.pingTimeout);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, _.get(_this.opts.connection.timeout, 9999));\n\t\t\t\t\t}, 60000);\n\n\t\t\t\t\t// Join all the channels from the config with an interval..\n\t\t\t\t\tvar joinInterval = _.get(this.opts.options.joinInterval, 2000);\n\t\t\t\t\tif (joinInterval < 300) joinInterval = 300;\n\t\t\t\t\tvar joinQueue = new timer.queue(joinInterval);\n\t\t\t\t\tvar joinChannels = _.union(this.opts.channels, this.channels);\n\t\t\t\t\tthis.channels = [];\n\n\t\t\t\t\tvar _loop = function _loop() {\n\t\t\t\t\t\tvar channel = joinChannels[i];\n\t\t\t\t\t\tjoinQueue.add(function () {\n\t\t\t\t\t\t\tif (_this._isConnected()) {\n\t\t\t\t\t\t\t\t_this.join(channel).catch(function (err) {\n\t\t\t\t\t\t\t\t\treturn _this.log.error(err);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (var i = 0; i < joinChannels.length; i++) {\n\t\t\t\t\t\t_loop();\n\t\t\t\t\t}\n\n\t\t\t\t\tjoinQueue.run();\n\t\t\t\t\tbreak;\n\n\t\t\t\t// https://github.com/justintv/Twitch-API/blob/master/chat/capabilities.md#notice\n\t\t\t\tcase \"NOTICE\":\n\t\t\t\t\tvar nullArr = [null];\n\t\t\t\t\tvar noticeArr = [channel, msgid, msg];\n\t\t\t\t\tvar msgidArr = [msgid];\n\t\t\t\t\tvar channelTrueArr = [channel, true];\n\t\t\t\t\tvar channelFalseArr = [channel, false];\n\t\t\t\t\tvar noticeAndNull = [noticeArr, nullArr];\n\t\t\t\t\tvar noticeAndMsgid = [noticeArr, msgidArr];\n\t\t\t\t\tvar basicLog = \"[\" + channel + \"] \" + msg;\n\t\t\t\t\tswitch (msgid) {\n\t\t\t\t\t\t// This room is now in subscribers-only mode.\n\t\t\t\t\t\tcase \"subs_on\":\n\t\t\t\t\t\t\tthis.log.info(\"[\" + channel + \"] This room is now in subscribers-only mode.\");\n\t\t\t\t\t\t\tthis.emits([\"subscriber\", \"subscribers\", \"_promiseSubscribers\"], [channelTrueArr, channelTrueArr, nullArr]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// This room is no longer in subscribers-only mode.\n\t\t\t\t\t\tcase \"subs_off\":\n\t\t\t\t\t\t\tthis.log.info(\"[\" + channel + \"] This room is no longer in subscribers-only mode.\");\n\t\t\t\t\t\t\tthis.emits([\"subscriber\", \"subscribers\", \"_promiseSubscribersoff\"], [channelFalseArr, channelFalseArr, nullArr]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// This room is now in emote-only mode.\n\t\t\t\t\t\tcase \"emote_only_on\":\n\t\t\t\t\t\t\tthis.log.info(\"[\" + channel + \"] This room is now in emote-only mode.\");\n\t\t\t\t\t\t\tthis.emits([\"emoteonly\", \"_promiseEmoteonly\"], [channelTrueArr, nullArr]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// This room is no longer in emote-only mode.\n\t\t\t\t\t\tcase \"emote_only_off\":\n\t\t\t\t\t\t\tthis.log.info(\"[\" + channel + \"] This room is no longer in emote-only mode.\");\n\t\t\t\t\t\t\tthis.emits([\"emoteonly\", \"_promiseEmoteonlyoff\"], [channelFalseArr, nullArr]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Do not handle slow_on/off here, listen to the ROOMSTATE notice instead as it returns the delay.\n\t\t\t\t\t\tcase \"slow_on\":\n\t\t\t\t\t\tcase \"slow_off\":\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Do not handle followers_on/off here, listen to the ROOMSTATE notice instead as it returns the delay.\n\t\t\t\t\t\tcase \"followers_on_zero\":\n\t\t\t\t\t\tcase \"followers_on\":\n\t\t\t\t\t\tcase \"followers_off\":\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// This room is now in r9k mode.\n\t\t\t\t\t\tcase \"r9k_on\":\n\t\t\t\t\t\t\tthis.log.info(\"[\" + channel + \"] This room is now in r9k mode.\");\n\t\t\t\t\t\t\tthis.emits([\"r9kmode\", \"r9kbeta\", \"_promiseR9kbeta\"], [channelTrueArr, channelTrueArr, nullArr]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// This room is no longer in r9k mode.\n\t\t\t\t\t\tcase \"r9k_off\":\n\t\t\t\t\t\t\tthis.log.info(\"[\" + channel + \"] This room is no longer in r9k mode.\");\n\t\t\t\t\t\t\tthis.emits([\"r9kmode\", \"r9kbeta\", \"_promiseR9kbetaoff\"], [channelFalseArr, channelFalseArr, nullArr]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// The moderators of this room are: [..., ...]\n\t\t\t\t\t\tcase \"room_mods\":\n\t\t\t\t\t\t\tvar mods = msg.split(\": \")[1].toLowerCase().split(\", \").filter(function (n) {\n\t\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tthis.emits([\"_promiseMods\", \"mods\"], [[null, mods], [channel, mods]]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// There are no moderators for this room.\n\t\t\t\t\t\tcase \"no_mods\":\n\t\t\t\t\t\t\tthis.emits([\"_promiseMods\", \"mods\"], [[null, []], [channel, []]]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// The VIPs of this channel are: [..., ...]\n\t\t\t\t\t\tcase \"vips_success\":\n\t\t\t\t\t\t\tif (msg.endsWith(\".\")) {\n\t\t\t\t\t\t\t\tmsg = msg.slice(0, -1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar vips = msg.split(\": \")[1].toLowerCase().split(\", \").filter(function (n) {\n\t\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tthis.emits([\"_promiseVips\", \"vips\"], [[null, vips], [channel, vips]]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// There are no VIPs for this room.\n\t\t\t\t\t\tcase \"no_vips\":\n\t\t\t\t\t\t\tthis.emits([\"_promiseVips\", \"vips\"], [[null, []], [channel, []]]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Ban command failed..\n\t\t\t\t\t\tcase \"already_banned\":\n\t\t\t\t\t\tcase \"bad_ban_admin\":\n\t\t\t\t\t\tcase \"bad_ban_broadcaster\":\n\t\t\t\t\t\tcase \"bad_ban_global_mod\":\n\t\t\t\t\t\tcase \"bad_ban_self\":\n\t\t\t\t\t\tcase \"bad_ban_staff\":\n\t\t\t\t\t\tcase \"usage_ban\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseBan\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Ban command success..\n\t\t\t\t\t\tcase \"ban_success\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseBan\"], noticeAndNull);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Clear command failed..\n\t\t\t\t\t\tcase \"usage_clear\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseClear\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Mods command failed..\n\t\t\t\t\t\tcase \"usage_mods\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseMods\"], [noticeArr, [msgid, []]]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Mod command success..\n\t\t\t\t\t\tcase \"mod_success\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseMod\"], noticeAndNull);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// VIPs command failed..\n\t\t\t\t\t\tcase \"usage_vips\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseVips\"], [noticeArr, [msgid, []]]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// VIP command failed..\n\t\t\t\t\t\tcase \"usage_vip\":\n\t\t\t\t\t\tcase \"bad_vip_grantee_banned\":\n\t\t\t\t\t\tcase \"bad_vip_grantee_already_vip\":\n\t\t\t\t\t\tcase \"bad_vip_max_vips_reached\":\n\t\t\t\t\t\tcase \"bad_vip_achievement_incomplete\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseVip\"], [noticeArr, [msgid, []]]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// VIP command success..\n\t\t\t\t\t\tcase \"vip_success\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseVip\"], noticeAndNull);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Mod command failed..\n\t\t\t\t\t\tcase \"usage_mod\":\n\t\t\t\t\t\tcase \"bad_mod_banned\":\n\t\t\t\t\t\tcase \"bad_mod_mod\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseMod\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Unmod command success..\n\t\t\t\t\t\tcase \"unmod_success\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseUnmod\"], noticeAndNull);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Unvip command success...\n\t\t\t\t\t\tcase \"unvip_success\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseUnvip\"], noticeAndNull);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Unmod command failed..\n\t\t\t\t\t\tcase \"usage_unmod\":\n\t\t\t\t\t\tcase \"bad_unmod_mod\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseUnmod\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Unvip command failed..\n\t\t\t\t\t\tcase \"usage_unvip\":\n\t\t\t\t\t\tcase \"bad_unvip_grantee_not_vip\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseUnvip\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Color command success..\n\t\t\t\t\t\tcase \"color_changed\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseColor\"], noticeAndNull);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Color command failed..\n\t\t\t\t\t\tcase \"usage_color\":\n\t\t\t\t\t\tcase \"turbo_only_color\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseColor\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Commercial command success..\n\t\t\t\t\t\tcase \"commercial_success\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseCommercial\"], noticeAndNull);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Commercial command failed..\n\t\t\t\t\t\tcase \"usage_commercial\":\n\t\t\t\t\t\tcase \"bad_commercial_error\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseCommercial\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Host command success..\n\t\t\t\t\t\tcase \"hosts_remaining\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tvar remainingHost = !isNaN(msg[0]) ? parseInt(msg[0]) : 0;\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseHost\"], [noticeArr, [null, ~~remainingHost]]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Host command failed..\n\t\t\t\t\t\tcase \"bad_host_hosting\":\n\t\t\t\t\t\tcase \"bad_host_rate_exceeded\":\n\t\t\t\t\t\tcase \"bad_host_error\":\n\t\t\t\t\t\tcase \"usage_host\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseHost\"], [noticeArr, [msgid, null]]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// r9kbeta command failed..\n\t\t\t\t\t\tcase \"already_r9k_on\":\n\t\t\t\t\t\tcase \"usage_r9k_on\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseR9kbeta\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// r9kbetaoff command failed..\n\t\t\t\t\t\tcase \"already_r9k_off\":\n\t\t\t\t\t\tcase \"usage_r9k_off\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseR9kbetaoff\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Timeout command success..\n\t\t\t\t\t\tcase \"timeout_success\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseTimeout\"], noticeAndNull);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"delete_message_success\":\n\t\t\t\t\t\t\tthis.log.info(\"[\" + channel + \" \" + msg + \"]\");\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseDeletemessage\"], noticeAndNull);\n\n\t\t\t\t\t\t// Subscribersoff command failed..\n\t\t\t\t\t\tcase \"already_subs_off\":\n\t\t\t\t\t\tcase \"usage_subs_off\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseSubscribersoff\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Subscribers command failed..\n\t\t\t\t\t\tcase \"already_subs_on\":\n\t\t\t\t\t\tcase \"usage_subs_on\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseSubscribers\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Emoteonlyoff command failed..\n\t\t\t\t\t\tcase \"already_emote_only_off\":\n\t\t\t\t\t\tcase \"usage_emote_only_off\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseEmoteonlyoff\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Emoteonly command failed..\n\t\t\t\t\t\tcase \"already_emote_only_on\":\n\t\t\t\t\t\tcase \"usage_emote_only_on\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseEmoteonly\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Slow command failed..\n\t\t\t\t\t\tcase \"usage_slow_on\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseSlow\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Slowoff command failed..\n\t\t\t\t\t\tcase \"usage_slow_off\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseSlowoff\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Timeout command failed..\n\t\t\t\t\t\tcase \"usage_timeout\":\n\t\t\t\t\t\tcase \"bad_timeout_admin\":\n\t\t\t\t\t\tcase \"bad_timeout_broadcaster\":\n\t\t\t\t\t\tcase \"bad_timeout_duration\":\n\t\t\t\t\t\tcase \"bad_timeout_global_mod\":\n\t\t\t\t\t\tcase \"bad_timeout_self\":\n\t\t\t\t\t\tcase \"bad_timeout_staff\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseTimeout\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Unban command success..\n\t\t\t\t\t\t// Unban can also be used to cancel an active timeout.\n\t\t\t\t\t\tcase \"untimeout_success\":\n\t\t\t\t\t\tcase \"unban_success\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseUnban\"], noticeAndNull);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Unban command failed..\n\t\t\t\t\t\tcase \"usage_unban\":\n\t\t\t\t\t\tcase \"bad_unban_no_ban\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseUnban\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Delete command failed..\n\t\t\t\t\t\tcase \"usage_delete\":\n\t\t\t\t\t\tcase \"bad_delete_message_error\":\n\t\t\t\t\t\tcase \"bad_delete_message_broadcaster\":\n\t\t\t\t\t\tcase \"bad_delete_message_mod\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseDeletemessage\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Unhost command failed..\n\t\t\t\t\t\tcase \"usage_unhost\":\n\t\t\t\t\t\tcase \"not_hosting\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseUnhost\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Whisper command failed..\n\t\t\t\t\t\tcase \"whisper_invalid_login\":\n\t\t\t\t\t\tcase \"whisper_invalid_self\":\n\t\t\t\t\t\tcase \"whisper_limit_per_min\":\n\t\t\t\t\t\tcase \"whisper_limit_per_sec\":\n\t\t\t\t\t\tcase \"whisper_restricted\":\n\t\t\t\t\t\tcase \"whisper_restricted_recipient\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseWhisper\"], noticeAndMsgid);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Permission error..\n\t\t\t\t\t\tcase \"no_permission\":\n\t\t\t\t\t\tcase \"msg_banned\":\n\t\t\t\t\t\tcase \"msg_room_not_found\":\n\t\t\t\t\t\tcase \"msg_channel_suspended\":\n\t\t\t\t\t\tcase \"tos_ban\":\n\t\t\t\t\t\tcase \"invalid_user\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emits([\"notice\", \"_promiseBan\", \"_promiseClear\", \"_promiseUnban\", \"_promiseTimeout\", \"_promiseDeletemessage\", \"_promiseMods\", \"_promiseMod\", \"_promiseUnmod\", \"_promiseVips\", \"_promiseVip\", \"_promiseUnvip\", \"_promiseCommercial\", \"_promiseHost\", \"_promiseUnhost\", \"_promiseJoin\", \"_promisePart\", \"_promiseR9kbeta\", \"_promiseR9kbetaoff\", \"_promiseSlow\", \"_promiseSlowoff\", \"_promiseFollowers\", \"_promiseFollowersoff\", \"_promiseSubscribers\", \"_promiseSubscribersoff\", \"_promiseEmoteonly\", \"_promiseEmoteonlyoff\", \"_promiseWhisper\"], [noticeArr, [msgid, channel]]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Automod-related..\n\t\t\t\t\t\tcase \"msg_rejected\":\n\t\t\t\t\t\tcase \"msg_rejected_mandatory\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emit(\"automod\", channel, msgid, msg);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Unrecognized command..\n\t\t\t\t\t\tcase \"unrecognized_cmd\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emit(\"notice\", channel, msgid, msg);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Send the following msg-ids to the notice event listener..\n\t\t\t\t\t\tcase \"cmds_available\":\n\t\t\t\t\t\tcase \"host_target_went_offline\":\n\t\t\t\t\t\tcase \"msg_censored_broadcaster\":\n\t\t\t\t\t\tcase \"msg_duplicate\":\n\t\t\t\t\t\tcase \"msg_emoteonly\":\n\t\t\t\t\t\tcase \"msg_verified_email\":\n\t\t\t\t\t\tcase \"msg_ratelimit\":\n\t\t\t\t\t\tcase \"msg_subsonly\":\n\t\t\t\t\t\tcase \"msg_timedout\":\n\t\t\t\t\t\tcase \"msg_bad_characters\":\n\t\t\t\t\t\tcase \"msg_channel_blocked\":\n\t\t\t\t\t\tcase \"msg_facebook\":\n\t\t\t\t\t\tcase \"msg_followersonly\":\n\t\t\t\t\t\tcase \"msg_followersonly_followed\":\n\t\t\t\t\t\tcase \"msg_followersonly_zero\":\n\t\t\t\t\t\tcase \"msg_slowmode\":\n\t\t\t\t\t\tcase \"msg_suspended\":\n\t\t\t\t\t\tcase \"no_help\":\n\t\t\t\t\t\tcase \"usage_disconnect\":\n\t\t\t\t\t\tcase \"usage_help\":\n\t\t\t\t\t\tcase \"usage_me\":\n\t\t\t\t\t\tcase \"unavailable_command\":\n\t\t\t\t\t\t\tthis.log.info(basicLog);\n\t\t\t\t\t\t\tthis.emit(\"notice\", channel, msgid, msg);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Ignore this because we are already listening to HOSTTARGET..\n\t\t\t\t\t\tcase \"host_on\":\n\t\t\t\t\t\tcase \"host_off\":\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tif (msg.includes(\"Login unsuccessful\") || msg.includes(\"Login authentication failed\")) {\n\t\t\t\t\t\t\t\tthis.wasCloseCalled = false;\n\t\t\t\t\t\t\t\tthis.reconnect = false;\n\t\t\t\t\t\t\t\tthis.reason = msg;\n\t\t\t\t\t\t\t\tthis.log.error(this.reason);\n\t\t\t\t\t\t\t\tthis.ws.close();\n\t\t\t\t\t\t\t} else if (msg.includes(\"Error logging in\") || msg.includes(\"Improperly formatted auth\")) {\n\t\t\t\t\t\t\t\tthis.wasCloseCalled = false;\n\t\t\t\t\t\t\t\tthis.reconnect = false;\n\t\t\t\t\t\t\t\tthis.reason = msg;\n\t\t\t\t\t\t\t\tthis.log.error(this.reason);\n\t\t\t\t\t\t\t\tthis.ws.close();\n\t\t\t\t\t\t\t} else if (msg.includes(\"Invalid NICK\")) {\n\t\t\t\t\t\t\t\tthis.wasCloseCalled = false;\n\t\t\t\t\t\t\t\tthis.reconnect = false;\n\t\t\t\t\t\t\t\tthis.reason = \"Invalid NICK.\";\n\t\t\t\t\t\t\t\tthis.log.error(this.reason);\n\t\t\t\t\t\t\t\tthis.ws.close();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.log.warn(\"Could not parse NOTICE from tmi.twitch.tv:\\n\" + JSON.stringify(message, null, 4));\n\t\t\t\t\t\t\t\tthis.emit(\"notice\", channel, msgid, msg);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Handle subanniversary / resub..\n\t\t\t\tcase \"USERNOTICE\":\n\t\t\t\t\tvar username = tags[\"display-name\"] || tags[\"login\"];\n\t\t\t\t\tvar plan = tags[\"msg-param-sub-plan\"] || \"\";\n\t\t\t\t\tvar planName = _.unescapeIRC(_.get(tags[\"msg-param-sub-plan-name\"], \"\")) || null;\n\t\t\t\t\tvar prime = plan.includes(\"Prime\");\n\t\t\t\t\tvar methods = { prime: prime, plan: plan, planName: planName };\n\t\t\t\t\tvar streakMonths = ~~(tags[\"msg-param-streak-months\"] || 0);\n\t\t\t\t\tvar recipient = tags[\"msg-param-recipient-display-name\"] || tags[\"msg-param-recipient-user-name\"];\n\t\t\t\t\tvar giftSubCount = ~~tags[\"msg-param-mass-gift-count\"];\n\t\t\t\t\ttags[\"message-type\"] = msgid;\n\n\t\t\t\t\tswitch (msgid) {\n\t\t\t\t\t\t// Handle resub\n\t\t\t\t\t\tcase \"resub\":\n\t\t\t\t\t\t\tthis.emits([\"resub\", \"subanniversary\"], [[channel, username, streakMonths, msg, tags, methods]]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Handle sub\n\t\t\t\t\t\tcase \"sub\":\n\t\t\t\t\t\t\tthis.emit(\"subscription\", channel, username, methods, msg, tags);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Handle gift sub\n\t\t\t\t\t\tcase \"subgift\":\n\t\t\t\t\t\t\tthis.emit(\"subgift\", channel, username, streakMonths, recipient, methods, tags);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Handle anonymous gift sub\n\t\t\t\t\t\t// Need proof that this event occur\n\t\t\t\t\t\tcase \"anonsubgift\":\n\t\t\t\t\t\t\tthis.emit(\"anonsubgift\", channel, streakMonths, recipient, methods, tags);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Handle random gift subs\n\t\t\t\t\t\tcase \"submysterygift\":\n\t\t\t\t\t\t\tthis.emit(\"submysterygift\", channel, username, giftSubCount, methods, tags);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Handle anonymous random gift subs\n\t\t\t\t\t\t// Need proof that this event occur\n\t\t\t\t\t\tcase \"anonsubmysterygift\":\n\t\t\t\t\t\t\tthis.emit(\"anonsubmysterygift\", channel, giftSubCount, methods, tags);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Handle user upgrading from Prime to a normal tier sub\n\t\t\t\t\t\tcase \"primepaidupgrade\":\n\t\t\t\t\t\t\tthis.emit(\"primepaidupgrade\", channel, username, methods, tags);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Handle user upgrading from a gifted sub\n\t\t\t\t\t\tcase \"giftpaidupgrade\":\n\t\t\t\t\t\t\tvar sender = tags[\"msg-param-sender-name\"] || tags[\"msg-param-sender-login\"];\n\t\t\t\t\t\t\tthis.emit(\"giftpaidupgrade\", channel, username, sender, tags);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Handle user upgrading from an anonymous gifted sub\n\t\t\t\t\t\tcase \"anongiftpaidupgrade\":\n\t\t\t\t\t\t\tthis.emit(\"anongiftpaidupgrade\", channel, username, tags);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Handle raid\n\t\t\t\t\t\tcase \"raid\":\n\t\t\t\t\t\t\tvar username = tags[\"msg-param-displayName\"] || tags[\"msg-param-login\"];\n\t\t\t\t\t\t\tvar viewers = +tags[\"msg-param-viewerCount\"];\n\t\t\t\t\t\t\tthis.emit(\"raided\", channel, username, viewers, tags);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t// Handle ritual\n\t\t\t\t\t\tcase \"ritual\":\n\t\t\t\t\t\t\tvar ritualName = tags[\"msg-param-ritual-name\"];\n\t\t\t\t\t\t\tswitch (ritualName) {\n\t\t\t\t\t\t\t\t// Handle new chatter ritual\n\t\t\t\t\t\t\t\tcase \"new_chatter\":\n\t\t\t\t\t\t\t\t\tthis.emit(\"newchatter\", channel, username, tags, msg);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t// All unknown rituals should be passed through\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tthis.emit(\"ritual\", ritualName, channel, username, tags, msg);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t// All other msgid events should be emitted under a usernotice event\n\t\t\t\t\t\t// until it comes up and needs to be added..\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthis.emit(\"usernotice\", msgid, channel, tags, msg);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Channel is now hosting another channel or exited host mode..\n\t\t\t\tcase \"HOSTTARGET\":\n\t\t\t\t\tvar msgSplit = msg.split(\" \");\n\t\t\t\t\tvar viewers = ~~msgSplit[1] || 0;\n\t\t\t\t\t// Stopped hosting..\n\t\t\t\t\tif (msgSplit[0] === \"-\") {\n\t\t\t\t\t\tthis.log.info(\"[\" + channel + \"] Exited host mode.\");\n\t\t\t\t\t\tthis.emits([\"unhost\", \"_promiseUnhost\"], [[channel, viewers], [null]]);\n\t\t\t\t\t}\n\t\t\t\t\t// Now hosting..\n\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.log.info(\"[\" + channel + \"] Now hosting \" + msgSplit[0] + \" for \" + viewers + \" viewer(s).\");\n\t\t\t\t\t\t\tthis.emit(\"hosting\", channel, msgSplit[0], viewers);\n\t\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Someone has been timed out or chat has been cleared by a moderator..\n\t\t\t\tcase \"CLEARCHAT\":\n\t\t\t\t\t// User has been banned / timed out by a moderator..\n\t\t\t\t\tif (message.params.length > 1) {\n\t\t\t\t\t\t// Duration returns null if it's a ban, otherwise it's a timeout..\n\t\t\t\t\t\tvar duration = _.get(message.tags[\"ban-duration\"], null);\n\n\t\t\t\t\t\tif (_.isNull(duration)) {\n\t\t\t\t\t\t\tthis.log.info(\"[\" + channel + \"] \" + msg + \" has been banned.\");\n\t\t\t\t\t\t\tthis.emit(\"ban\", channel, msg, null, message.tags);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.log.info(\"[\" + channel + \"] \" + msg + \" has been timed out for \" + duration + \" seconds.\");\n\t\t\t\t\t\t\tthis.emit(\"timeout\", channel, msg, null, ~~duration, message.tags);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Chat was cleared by a moderator..\n\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.log.info(\"[\" + channel + \"] Chat was cleared by a moderator.\");\n\t\t\t\t\t\t\tthis.emits([\"clearchat\", \"_promiseClear\"], [[channel], [null]]);\n\t\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Someone's message has been deleted\n\t\t\t\tcase \"CLEARMSG\":\n\t\t\t\t\tif (message.params.length > 1) {\n\t\t\t\t\t\tvar deletedMessage = msg;\n\t\t\t\t\t\tvar username = tags[\"login\"];\n\t\t\t\t\t\ttags[\"message-type\"] = \"messagedeleted\";\n\n\t\t\t\t\t\tthis.log.info(\"[\" + channel + \"] \" + username + \"'s message has been deleted.\");\n\t\t\t\t\t\tthis.emit(\"messagedeleted\", channel, username, deletedMessage, tags);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Received a reconnection request from the server..\n\t\t\t\tcase \"RECONNECT\":\n\t\t\t\t\tthis.log.info(\"Received RECONNECT request from Twitch..\");\n\t\t\t\t\tthis.log.info(\"Disconnecting and reconnecting in \" + Math.round(this.reconnectTimer / 1000) + \" seconds..\");\n\t\t\t\t\tthis.disconnect().catch(function (err) {\n\t\t\t\t\t\treturn _this.log.error(err);\n\t\t\t\t\t});\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\treturn _this.connect().catch(function (err) {\n\t\t\t\t\t\t\treturn _this.log.error(err);\n\t\t\t\t\t\t});\n\t\t\t\t\t}, this.reconnectTimer);\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Received when joining a channel and every time you send a PRIVMSG to a channel.\n\t\t\t\tcase \"USERSTATE\":\n\t\t\t\t\tmessage.tags.username = this.username;\n\n\t\t\t\t\t// Add the client to the moderators of this room..\n\t\t\t\t\tif (message.tags[\"user-type\"] === \"mod\") {\n\t\t\t\t\t\tif (!this.moderators[channel]) {\n\t\t\t\t\t\t\tthis.moderators[channel] = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!this.moderators[channel].includes(this.username)) {\n\t\t\t\t\t\t\tthis.moderators[channel].push(this.username);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Logged in and username doesn't start with justinfan..\n\t\t\t\t\tif (!_.isJustinfan(this.getUsername()) && !this.userstate[channel]) {\n\t\t\t\t\t\tthis.userstate[channel] = tags;\n\t\t\t\t\t\tthis.lastJoined = channel;\n\t\t\t\t\t\tthis.channels.push(channel);\n\t\t\t\t\t\tthis.log.info(\"Joined \" + channel);\n\t\t\t\t\t\tthis.emit(\"join\", channel, _.username(this.getUsername()), true);\n\t\t\t\t\t}\n\n\t\t\t\t\t// // Emote-sets has changed, update it..\n\t\t\t\t\t// if(message.tags[\"emote-sets\"] !== this.emotes) {\n\t\t\t\t\t// \tthis._updateEmoteset(message.tags[\"emote-sets\"]);\n\t\t\t\t\t// }\n\n\t\t\t\t\tthis.userstate[channel] = tags;\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Describe non-channel-specific state informations..\n\t\t\t\tcase \"GLOBALUSERSTATE\":\n\t\t\t\t\tthis.globaluserstate = tags;\n\n\t\t\t\t\t// Received emote-sets..\n\t\t\t\t\tif (typeof message.tags[\"emote-sets\"] !== \"undefined\") {\n\t\t\t\t\t\t// this._updateEmoteset(message.tags[\"emote-sets\"]);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Received when joining a channel and every time one of the chat room settings, like slow mode, change.\n\t\t\t\t// The message on join contains all room settings.\n\t\t\t\tcase \"ROOMSTATE\":\n\t\t\t\t\t// We use this notice to know if we successfully joined a channel..\n\t\t\t\t\tif (_.channel(this.lastJoined) === channel) {\n\t\t\t\t\t\tthis.emit(\"_promiseJoin\", null, channel);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Provide the channel name in the tags before emitting it..\n\t\t\t\t\tmessage.tags.channel = channel;\n\t\t\t\t\tthis.emit(\"roomstate\", channel, message.tags);\n\n\t\t\t\t\tif (!message.tags.hasOwnProperty(\"subs-only\")) {\n\t\t\t\t\t\t// Handle slow mode here instead of the slow_on/off notice..\n\t\t\t\t\t\t// This room is now in slow mode. You may send messages every slow_duration seconds.\n\t\t\t\t\t\tif (message.tags.hasOwnProperty(\"slow\")) {\n\t\t\t\t\t\t\tif (typeof message.tags.slow === \"boolean\" && !message.tags.slow) {\n\t\t\t\t\t\t\t\tvar disabled = [channel, false, 0];\n\t\t\t\t\t\t\t\tthis.log.info(\"[\" + channel + \"] This room is no longer in slow mode.\");\n\t\t\t\t\t\t\t\tthis.emits([\"slow\", \"slowmode\", \"_promiseSlowoff\"], [disabled, disabled, [null]]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar seconds = ~~message.tags.slow;\n\t\t\t\t\t\t\t\tvar enabled = [channel, true, seconds];\n\t\t\t\t\t\t\t\tthis.log.info(\"[\" + channel + \"] This room is now in slow mode.\");\n\t\t\t\t\t\t\t\tthis.emits([\"slow\", \"slowmode\", \"_promiseSlow\"], [enabled, enabled, [null]]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Handle followers only mode here instead of the followers_on/off notice..\n\t\t\t\t\t\t// This room is now in follower-only mode.\n\t\t\t\t\t\t// This room is now in <duration> followers-only mode.\n\t\t\t\t\t\t// This room is no longer in followers-only mode.\n\t\t\t\t\t\t// duration is in minutes (string)\n\t\t\t\t\t\t// -1 when /followersoff (string)\n\t\t\t\t\t\t// false when /followers with no duration (boolean)\n\t\t\t\t\t\tif (message.tags.hasOwnProperty(\"followers-only\")) {\n\t\t\t\t\t\t\tif (message.tags[\"followers-only\"] === \"-1\") {\n\t\t\t\t\t\t\t\tvar disabled = [channel, false, 0];\n\t\t\t\t\t\t\t\tthis.log.info(\"[\" + channel + \"] This room is no longer in followers-only mode.\");\n\t\t\t\t\t\t\t\tthis.emits([\"followersonly\", \"followersmode\", \"_promiseFollowersoff\"], [disabled, disabled, [null]]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar minutes = ~~message.tags[\"followers-only\"];\n\t\t\t\t\t\t\t\tvar enabled = [channel, true, minutes];\n\t\t\t\t\t\t\t\tthis.log.info(\"[\" + channel + \"] This room is now in follower-only mode.\");\n\t\t\t\t\t\t\t\tthis.emits([\"followersonly\", \"followersmode\", \"_promiseFollowers\"], [enabled, enabled, [null]]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Wrong cluster..\n\t\t\t\tcase \"SERVERCHANGE\":\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.log.warn(\"Could not parse message from tmi.twitch.tv:\\n\" + JSON.stringify(message, null, 4));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Messages from jtv..\n\t\telse if (message.prefix === \"jtv\") {\n\t\t\t\tswitch (message.command) {\n\t\t\t\t\tcase \"MODE\":\n\t\t\t\t\t\tif (msg === \"+o\") {\n\t\t\t\t\t\t\t// Add username to the moderators..\n\t\t\t\t\t\t\tif (!this.moderators[channel]) {\n\t\t\t\t\t\t\t\tthis.moderators[channel] = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!this.moderators[channel].includes(message.params[2])) {\n\t\t\t\t\t\t\t\tthis.moderators[channel].push(message.params[2]);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.emit(\"mod\", channel, message.params[2]);\n\t\t\t\t\t\t} else if (msg === \"-o\") {\n\t\t\t\t\t\t\t// Remove username from the moderators..\n\t\t\t\t\t\t\tif (!this.moderators[channel]) {\n\t\t\t\t\t\t\t\tthis.moderators[channel] = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.moderators[channel].filter(function (value) {\n\t\t\t\t\t\t\t\treturn value != message.params[2];\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tthis.emit(\"unmod\", channel, message.params[2]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.log.warn(\"Could not parse message from jtv:\\n\" + JSON.stringify(message, null, 4));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Anything else..\n\t\t\telse {\n\t\t\t\t\tswitch (message.command) {\n\t\t\t\t\t\tcase \"353\":\n\t\t\t\t\t\t\tthis.emit(\"names\", message.params[2], message.params[3].split(\" \"));\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"366\":\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Someone has joined the channel..\n\t\t\t\t\t\tcase \"JOIN\":\n\t\t\t\t\t\t\tvar nick = message.prefix.split(\"!\")[0];\n\t\t\t\t\t\t\t// Joined a channel as a justinfan (anonymous) user..\n\t\t\t\t\t\t\tif (_.isJustinfan(this.getUsername()) && this.username === nick) {\n\t\t\t\t\t\t\t\tthis.lastJoined = channel;\n\t\t\t\t\t\t\t\tthis.channels.push(channel);\n\t\t\t\t\t\t\t\tthis.log.info(\"Joined \" + channel);\n\t\t\t\t\t\t\t\tthis.emit(\"join\", channel, nick, true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Someone else joined the channel, just emit the join event..\n\t\t\t\t\t\t\tif (this.username !== nick) {\n\t\t\t\t\t\t\t\tthis.emit(\"join\", channel, nick, false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Someone has left the channel..\n\t\t\t\t\t\tcase \"PART\":\n\t\t\t\t\t\t\tvar isSelf = false;\n\t\t\t\t\t\t\tvar nick = message.prefix.split(\"!\")[0];\n\t\t\t\t\t\t\t// Client left a channel..\n\t\t\t\t\t\t\tif (this.username === nick) {\n\t\t\t\t\t\t\t\tisSelf = true;\n\t\t\t\t\t\t\t\tif (this.userstate[channel]) {\n\t\t\t\t\t\t\t\t\tdelete this.userstate[channel];\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar index = this.channels.indexOf(channel);\n\t\t\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\t\t\tthis.channels.splice(index, 1);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar index = this.opts.channels.indexOf(channel);\n\t\t\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\t\t\tthis.opts.channels.splice(index, 1);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.log.info(\"Left \" + channel);\n\t\t\t\t\t\t\t\tthis.emit(\"_promisePart\", null);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Client or someone else left the channel, emit the part event..\n\t\t\t\t\t\t\tthis.emit(\"part\", channel, nick, isSelf);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t// Received a whisper..\n\t\t\t\t\t\tcase \"WHISPER\":\n\t\t\t\t\t\t\tvar nick = message.prefix.split(\"!\")[0];\n\t\t\t\t\t\t\tthis.log.info(\"[WHISPER] <\" + nick + \">: \" + msg);\n\n\t\t\t\t\t\t\t// Update the tags to provide the username..\n\t\t\t\t\t\t\tif (!message.tags.hasOwnProperty(\"username\")) {\n\t\t\t\t\t\t\t\tmessage.tags.username = nick;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmessage.tags[\"message-type\"] = \"whisper\";\n\n\t\t\t\t\t\t\tvar from = _.channel(message.tags.username);\n\t\t\t\t\t\t\t// Emit for both, whisper and message..\n\t\t\t\t\t\t\tthis.emits([\"whisper\", \"message\"], [[from, message.tags, msg, false]]);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"PRIVMSG\":\n\t\t\t\t\t\t\t// Add username (lowercase) to the tags..\n\t\t\t\t\t\t\tmessage.tags.username = message.prefix.split(\"!\")[0];\n\n\t\t\t\t\t\t\t// Message from JTV..\n\t\t\t\t\t\t\tif (message.tags.username === \"jtv\") {\n\t\t\t\t\t\t\t\tvar name = _.username(msg.split(\" \")[0]);\n\t\t\t\t\t\t\t\tvar autohost = msg.includes(\"auto\");\n\t\t\t\t\t\t\t\t// Someone is hosting the channel and the message contains how many viewers..\n\t\t\t\t\t\t\t\tif (msg.includes(\"hosting you for\")) {\n\t\t\t\t\t\t\t\t\tvar count = _.extractNumber(msg);\n\n\t\t\t\t\t\t\t\t\tthis.emit(\"hosted\", channel, name, count, autohost);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Some is hosting the channel, but no viewer(s) count provided in the message..\n\t\t\t\t\t\t\t\telse if (msg.includes(\"hosting you\")) {\n\t\t\t\t\t\t\t\t\t\tthis.emit(\"hosted\", channel, name, 0, autohost);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar messagesLogLevel = _.get(this.opts.options.messagesLogLevel, \"info\");\n\n\t\t\t\t\t\t\t\t// Message is an action (/me <message>)..\n\t\t\t\t\t\t\t\tvar actionMessage = _.actionMessage(msg);\n\t\t\t\t\t\t\t\tmessage.tags[\"message-type\"] = actionMessage ? \"action\" : \"chat\";\n\t\t\t\t\t\t\t\tmsg = actionMessage ? actionMessage[1] : msg;\n\t\t\t\t\t\t\t\t// Check for Bits prior to actions message\n\t\t\t\t\t\t\t\tif (message.tags.hasOwnProperty(\"bits\")) {\n\t\t\t\t\t\t\t\t\tthis.emit(\"cheer\", channel, message.tags, msg);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//Handle Channel Point Redemptions (Require's Text Input)\n\t\t\t\t\t\t\t\t\tif (message.tags.hasOwnProperty(\"msg-id\")) {\n\t\t\t\t\t\t\t\t\t\tif (message.tags[\"msg-id\"] === \"highlighted-message\") {\n\t\t\t\t\t\t\t\t\t\t\tvar rewardtype = message.tags[\"msg-id\"];\n\t\t\t\t\t\t\t\t\t\t\tthis.emit(\"redeem\", channel, message.tags.username, rewardtype, message.tags, msg);\n\t\t\t\t\t\t\t\t\t\t} else if (message.tags[\"msg-id\"] === \"skip-subs-mode-message\") {\n\t\t\t\t\t\t\t\t\t\t\tvar rewardtype = message.tags[\"msg-id\"];\n\t\t\t\t\t\t\t\t\t\t\tthis.emit(\"redeem\", channel, message.tags.username, rewardtype, message.tags, msg);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else if (message.tags.hasOwnProperty(\"custom-reward-id\")) {\n\t\t\t\t\t\t\t\t\t\tvar rewardtype = message.tags[\"custom-reward-id\"];\n\t\t\t\t\t\t\t\t\t\tthis.emit(\"redeem\", channel, message.tags.username, rewardtype, message.tags, msg);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (actionMessage) {\n\t\t\t\t\t\t\t\t\t\tthis.log[messagesLogLevel](\"[\" + channel + \"] *<\" + message.tags.username + \">: \" + msg);\n\t\t\t\t\t\t\t\t\t\tthis.emits([\"action\", \"message\"], [[channel, message.tags, msg, false]]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// Message is a regular chat message..\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tthis.log[messagesLogLevel](\"[\" + channel + \"] <\" + message.tags.username + \">: \" + msg);\n\t\t\t\t\t\t\t\t\t\t\tthis.emits([\"chat\", \"message\"], [[channel, message.tags, msg, false]]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthis.log.warn(\"Could not parse message:\\n\" + JSON.stringify(message, null, 4));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n};\n\n// Connect to server..\nclient.prototype.connect = function connect() {\n\tvar _this2 = this;\n\n\treturn new Promise(function (resolve, reject) {\n\t\t_this2.server = _.get(_this2.opts.connection.server, \"irc-ws.chat.twitch.tv\");\n\t\t_this2.port = _.get(_this2.opts.connection.port, 80);\n\n\t\t// Override port if using a secure connection..\n\t\tif (_this2.secure) {\n\t\t\t_this2.port = 443;\n\t\t}\n\t\tif (_this2.port === 443) {\n\t\t\t_this2.secure = true;\n\t\t}\n\n\t\t_this2.reconnectTimer = _this2.reconnectTimer * _this2.reconnectDecay;\n\t\tif (_this2.reconnectTimer >= _this2.maxReconnectInterval) {\n\t\t\t_this2.reconnectTimer = _this2.maxReconnectInterval;\n\t\t}\n\n\t\t// Connect to server from configuration..\n\t\t_this2._openConnection();\n\t\t_this2.once(\"_promiseConnect\", function (err) {\n\t\t\tif (!err) {\n\t\t\t\tresolve([_this2.server, ~~_this2.port]);\n\t\t\t} else {\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t});\n};\n\n// Open a connection..\nclient.prototype._openConnection = function _openConnection() {\n\tthis.ws = new _WebSocket((this.secure ? \"wss\" : \"ws\") + \"://\" + this.server + \":\" + this.port + \"/\", \"irc\");\n\n\tthis.ws.onmessage = this._onMessage.bind(this);\n\tthis.ws.onerror = this._onError.bind(this);\n\tthis.ws.onclose = this._onClose.bind(this);\n\tthis.ws.onopen = this._onOpen.bind(this);\n};\n\n// Called when the WebSocket connection's readyState changes to OPEN.\n// Indicates that the connection is ready to send and receive data..\nclient.prototype._onOpen = function _onOpen() {\n\tvar _this3 = this;\n\n\tif (_.isNull(this.ws) || this.ws.readyState !== 1) {\n\t\treturn;\n\t}\n\n\t// Emitting \"connecting\" event..\n\tthis.log.info(\"Connecting to \" + this.server + \" on port \" + this.port + \"..\");\n\tthis.emit(\"connecting\", this.server, ~~this.port);\n\n\tthis.username = _.get(this.opts.identity.username, _.justinfan());\n\tthis._getToken().then(function (token) {\n\t\tvar password = _.password(token);\n\n\t\t// Emitting \"logon\" event..\n\t\t_this3.log.info(\"Sending authentication to server..\");\n\t\t_this3.emit(\"logon\");\n\n\t\t// Authentication..\n\t\t_this3.ws.send(\"CAP REQ :twitch.tv/tags twitch.tv/commands twitch.tv/membership\");\n\t\tif (password) {\n\t\t\t_this3.ws.send(\"PASS \" + password);\n\t\t} else if (_.isJustinfan(_this3.username)) {\n\t\t\t_this3.ws.send(\"PASS SCHMOOPIIE\");\n\t\t}\n\t\t_this3.ws.send(\"NICK \" + _this3.username);\n\t}).catch(function (err) {\n\t\t_this3.emits([\"_promiseConnect\", \"disconnected\"], [[err], [\"Could not get a token.\"]]);\n\t});\n};\n\n// Fetches a token from the option.\nclient.prototype._getToken = function _getPassword() {\n\tvar passwordOption = this.opts.identity.password;\n\tvar password = void 0;\n\tif (typeof passwordOption === \"function\") {\n\t\tpassword = passwordOption();\n\t\tif (password instanceof Promise) {\n\t\t\treturn password;\n\t\t}\n\t\treturn Promise.resolve(password);\n\t}\n\treturn Promise.resolve(passwordOption);\n};\n\n// Called when a message is received from the server..\nclient.prototype._onMessage = function _onMessage(event) {\n\tvar _this4 = this;\n\n\tvar parts = event.data.split(\"\\r\\n\");\n\n\tparts.forEach(function (str) {\n\t\tif (!_.isNull(str)) {\n\t\t\t_this4.handleMessage(parse.msg(str));\n\t\t}\n\t});\n};\n\n// Called when an error occurs..\nclient.prototype._onError = function _onError() {\n\tvar _this5 = this;\n\n\tthis.moderators = {};\n\tthis.userstate = {};\n\tthis.globaluserstate = {};\n\n\t// Stop the internal ping timeout check interval..\n\tclearInterval(this.pingLoop);\n\tclearTimeout(this.pingTimeout);\n\n\tthis.reason = !_.isNull(this.ws) ? \"Unable to connect.\" : \"Connection closed.\";\n\n\tthis.emits([\"_promiseConnect\", \"disconnected\"], [[this.reason]]);\n\n\t// Reconnect to server..\n\tif (this.reconnect && this.reconnections === this.maxReconnectAttempts) {\n\t\tthis.emit(\"maxreconnect\");\n\t\tthis.log.error(\"Maximum reconnection attempts reached.\");\n\t}\n\tif (this.reconnect && !this.reconnecting && this.reconnections <= this.maxReconnectAttempts - 1) {\n\t\tthis.reconnecting = true;\n\t\tthis.reconnections = this.reconnections + 1;\n\t\tthis.log.error(\"Reconnecting in \" + Math.round(this.reconnectTimer / 1000) + \" seconds..\");\n\t\tthis.emit(\"reconnect\");\n\t\tsetTimeout(function () {\n\t\t\t_this5.reconnecting = false;\n\t\t\t_this5.connect().catch(function (err) {\n\t\t\t\treturn _this5.log.error(err);\n\t\t\t});\n\t\t}, this.reconnectTimer);\n\t}\n\n\tthis.ws = null;\n};\n\n// Called when the WebSocket connection's readyState changes to CLOSED..\nclient.prototype._onClose = function _onClose() {\n\tvar _this6 = this;\n\n\tthis.moderators = {};\n\tthis.userstate = {};\n\tthis.globaluserstate = {};\n\n\t// Stop the internal ping timeout check interval..\n\tclearInterval(this.pingLoop);\n\tclearTimeout(this.pingTimeout);\n\n\t// User called .disconnect(), don't try to reconnect.\n\tif (this.wasCloseCalled) {\n\t\tthis.wasCloseCalled = false;\n\t\tthis.reason = \"Connection closed.\";\n\t\tthis.log.info(this.reason);\n\t\tthis.emits([\"_promiseConnect\", \"_promiseDisconnect\", \"disconnected\"], [[this.reason], [null], [this.reason]]);\n\t}\n\t// Got disconnected from server..\n\telse {\n\t\t\tthis.emits([\"_promiseConnect\", \"disconnected\"], [[this.reason]]);\n\n\t\t\t// Reconnect to server..\n\t\t\tif (this.reconnect && this.reconnections === this.maxReconnectAttempts) {\n\t\t\t\tthis.emit(\"maxreconnect\");\n\t\t\t\tthis.log.error(\"Maximum reconnection attempts reached.\");\n\t\t\t}\n\t\t\tif (this.reconnect && !this.reconnecting && this.reconnections <= this.maxReconnectAttempts - 1) {\n\t\t\t\tthis.reconnecting = true;\n\t\t\t\tthis.reconnections = this.reconnections + 1;\n\t\t\t\tthis.log.error(\"Could not connect to server. Reconnecting in \" + Math.round(this.reconnectTimer / 1000) + \" seconds..\");\n\t\t\t\tthis.emit(\"reconnect\");\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t_this6.reconnecting = false;\n\t\t\t\t\t_this6.connect().catch(function (err) {\n\t\t\t\t\t\treturn _this6.log.error(err);\n\t\t\t\t\t});\n\t\t\t\t}, this.reconnectTimer);\n\t\t\t}\n\t\t}\n\n\tthis.ws = null;\n};\n\n// Minimum of 600ms for command promises, if current latency exceeds, add 100ms to it to make sure it doesn't get timed out..\nclient.prototype._getPromiseDelay = function _getPromiseDelay() {\n\tif (this.currentLatency <= 600) {\n\t\treturn 600;\n\t} else {\n\t\treturn this.currentLatency + 100;\n\t}\n};\n\n// Send command to server or channel..\nclient.prototype._sendCommand = function _sendCommand(delay, channel, command, fn) {\n\tvar _this7 = this;\n\n\t// Race promise against delay..\n\treturn new Promise(function (resolve, reject) {\n\t\t// Make sure the socket is opened..\n\t\tif (_.isNull(_this7.ws) || _this7.ws.readyState !== 1) {\n\t\t\t// Disconnected from server..\n\t\t\treturn reject(\"Not connected to server.\");\n\t\t} else if (typeof delay === \"number\") {\n\t\t\t_.promiseDelay(delay).then(function () {\n\t\t\t\treturn reject(\"No response from Twitch.\");\n\t\t\t});\n\t\t}\n\n\t\t// Executing a command on a channel..\n\t\tif (!_.isNull(channel)) {\n\t\t\tvar chan = _.channel(channel);\n\t\t\t_this7.log.info(\"[\" + chan + \"] Executing command: \" + command);\n\t\t\t_this7.ws.send(\"PRIVMSG \" + chan + \" :\" + command);\n\t\t}\n\n\t\t// Executing a raw command..\n\t\telse {\n\t\t\t\t_this7.log.info(\"Executing command: \" + command);\n\t\t\t\t_this7.ws.send(command);\n\t\t\t}\n\t\tif (typeof fn === 'function') {\n\t\t\tfn(resolve, reject);\n\t\t} else {\n\t\t\tresolve();\n\t\t}\n\t});\n};\n\n// Send a message to channel..\nclient.prototype._sendMessage = function _sendMessage(delay, channel, message, fn) {\n\tvar _this8 = this;\n\n\t// Promise a result..\n\treturn new Promise(function (resolve, reject) {\n\t\t// Make sure the socket is opened and not logged in as a justinfan user..\n\t\tif (_.isNull(_this8.ws) || _this8.ws.readyState !== 1) {\n\t\t\treturn reject(\"Not connected to server.\");\n\t\t} else if (_.isJustinfan(_this8.getUsername())) {\n\t\t\treturn reject(\"Cannot send anonymous messages.\");\n\t\t}\n\t\tvar chan = _.channel(channel);\n\t\tif (!_this8.userstate[chan]) {\n\t\t\t_this8.userstate[chan] = {};\n\t\t}\n\n\t\t// Split long lines otherwise they will be eaten by the server..\n\t\tif (message.length >= 500) {\n\t\t\tvar msg = _.splitLine(message, 500);\n\t\t\tmessage = msg[0];\n\n\t\t\tsetTimeout(function () {\n\t\t\t\t_this8._sendMessage(delay, channel, msg[1], function () {});\n\t\t\t}, 350);\n\t\t}\n\n\t\t_this8.ws.send(\"PRIVMSG \" + chan + \" :\" + message);\n\n\t\tvar emotes = {};\n\n\t\t// Parse regex and string emotes..\n\t\tObject.keys(_this8.emotesets).forEach(function (id) {\n\t\t\treturn _this8.emotesets[id].forEach(function (emote) {\n\t\t\t\tvar emoteFunc = _.isRegex(emote.code) ? parse.emoteRegex : parse.emoteString;\n\t\t\t\treturn emoteFunc(message, emote.code, emote.id, emotes);\n\t\t\t});\n\t\t});\n\n\t\t// Merge userstate with parsed emotes..\n\t\tvar userstate = _.merge(_this8.userstate[chan], parse.emotes({ emotes: parse.transformEmotes(emotes) || null }));\n\n\t\tvar messagesLogLevel = _.get(_this8.opts.options.messagesLogLevel, \"info\");\n\n\t\t// Message is an action (/me <message>)..\n\t\tvar actionMessage = _.actionMessage(message);\n\t\tif (actionMessage) {\n\t\t\tuserstate[\"message-type\"] = \"action\";\n\t\t\t_this8.log[messagesLogLevel](\"[\" + chan + \"] *<\" + _this8.getUsername() + \">: \" + actionMessage[1]);\n\t\t\t_this8.emits([\"action\", \"message\"], [[chan, userstate, actionMessage[1], true]]);\n\t\t}\n\n\t\t// Message is a regular chat message..\n\t\telse {\n\t\t\t\tuserstate[\"message-type\"] = \"chat\";\n\t\t\t\t_this8.log[messagesLogLevel](\"[\" + chan + \"] <\" + _this8.getUsername() + \">: \" + message);\n\t\t\t\t_this8.emits([\"chat\", \"message\"], [[chan, userstate, message, true]]);\n\t\t\t}\n\t\tif (typeof fn === 'function') {\n\t\t\tfn(resolve, reject);\n\t\t} else {\n\t\t\tresolve();\n\t\t}\n\t});\n};\n\n// Grab the emote-sets object from the API..\nclient.prototype._updateEmoteset = function _updateEmoteset(sets) {\n\tvar _this9 = this;\n\n\tthis.emotes = sets;\n\n\tthis._getToken().then(function (token) {\n\t\treturn _this9.api({\n\t\t\turl: \"/chat/emoticon_images?emotesets=\" + sets,\n\t\t\theaders: {\n\t\t\t\t\"Authorization\": \"OAuth \" + _.token(token),\n\t\t\t\t\"Client-ID\": _this9.clientId\n\t\t\t}\n\t\t}, function (err, res, body) {\n\t\t\tif (!err) {\n\t\t\t\t_this9.emotesets = body[\"emoticon_sets\"] || {};\n\t\t\t\treturn _this9.emit(\"emotesets\", sets, _this9.emotesets);\n\t\t\t}\n\t\t\tsetTimeout(function () {\n\t\t\t\treturn _this9._updateEmoteset(sets);\n\t\t\t}, 60000);\n\t\t});\n\t}).catch(function () {\n\t\treturn setTimeout(function () {\n\t\t\treturn _this9._updateEmoteset(sets);\n\t\t}, 60000);\n\t});\n};\n\n// Get current username..\nclient.prototype.getUsername = function getUsername() {\n\treturn this.username;\n};\n\n// Get current options..\nclient.prototype.getOptions = function getOptions() {\n\treturn this.opts;\n};\n\n// Get current channels..\nclient.prototype.getChannels = function getChannels() {\n\treturn this.channels;\n};\n\n// Check if username is a moderator on a channel..\nclient.prototype.isMod = function isMod(channel, username) {\n\tvar chan = _.channel(channel);\n\tif (!this.moderators[chan]) {\n\t\tthis.moderators[chan] = [];\n\t}\n\treturn this.moderators[chan].includes(_.username(username));\n};\n\n// Get readyState..\nclient.prototype.readyState = function readyState() {\n\tif (_.isNull(this.ws)) {\n\t\treturn \"CLOSED\";\n\t}\n\treturn [\"CONNECTING\", \"OPEN\", \"CLOSING\", \"CLOSED\"][this.ws.readyState];\n};\n\n// Determine if the client has a WebSocket and it's open..\nclient.prototype._isConnected = function _isConnected() {\n\n\treturn this.ws !== null && this.ws.readyState === 1;\n};\n\n// Disconnect from server..\nclient.prototype.disconnect = function disconnect() {\n\tvar _this10 = this;\n\n\treturn new Promise(function (resolve, reject) {\n\t\tif (!_.isNull(_this10.ws) && _this10.ws.readyState !== 3) {\n\t\t\t_this10.wasCloseCalled = true;\n\t\t\t_this10.log.info(\"Disconnecting from server..\");\n\t\t\t_this10.ws.close();\n\t\t\t_this10.once(\"_promiseDisconnect\", function () {\n\t\t\t\treturn resolve([_this10.server, ~~_this10.port]);\n\t\t\t});\n\t\t} else {\n\t\t\t_this10.log.error(\"Cannot disconnect from server. Socket is not opened or connection is already closing.\");\n\t\t\treject(\"Cannot disconnect from server. Socket is not opened or connection is already closing.\");\n\t\t}\n\t});\n};\n\n// Expose everything, for browser and Node..\nif (typeof module !== \"undefined\" && module.exports) {\n\tmodule.exports = client;\n}\nif (typeof window !== \"undefined\") {\n\twindow.tmi = {};\n\twindow.tmi.client = client;\n\twindow.tmi.Client = client;\n}"]},"metadata":{},"sourceType":"script"}